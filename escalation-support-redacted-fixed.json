{
  "name": "escalation-support",
  "nodes": [
    {
      "parameters": {
        "documentId": "REDACTED",
        "sheetName": "REDACTED",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        512,
        -240
      ],
      "id": "REDACTED",
      "name": "Get row(s) in sheet",
      "credentials": "REDACTED"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Escalated Query:\n\n<query>\n{{ $json.message }}\n</query>\n\n<ticketid>\n{{ $json['ticket id'] }}\n</ticketid>",
        "options": {
          "systemMessage": "=You are an escalation assistant\n\nRead the escalated query and propose a resolution\nYour resolution with be reviewed by a human CSM\n\nAlways call the 'known_issues' tool to learn about any issues that may be impacting service levels\n\nAlways call the 'order_tracking' tool to see if there is tracking information relevant to the customer order\n\nYou have the power to:\n- Offer a 10% refund for customers who are really upset\n- Offer a 50% refund if the customer says they will leave a bad review\n- If an item arrived with missing parts, first try to offer to send the missing parts. If the customer is very upset, offer to send a new item free of charge.\n\nOutput your response as a concise summary and set of bullet points (resolutions). This will be reviewed by a human\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        656,
        -240
      ],
      "id": "REDACTED",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        624,
        -32
      ],
      "id": "REDACTED",
      "name": "OpenAI Chat Model",
      "credentials": "REDACTED"
    },
    {
      "parameters": {
        "documentId": "REDACTED",
        "sheetName": "REDACTED",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        928,
        0
      ],
      "id": "REDACTED",
      "name": "order_tracking",
      "credentials": "REDACTED"
    },
    {
      "parameters": {
        "documentId": "REDACTED",
        "sheetName": "REDACTED",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        784,
        0
      ],
      "id": "REDACTED",
      "name": "known_issues",
      "credentials": "REDACTED"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "REDACTED",
        "subject": "Approval Required",
        "message": "=Your approval is required for the below:\n\n{{ $json.output }}\n\nPlease respond with any feedback and the status of your approval.",
        "responseType": "freeText",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1104,
        0
      ],
      "id": "REDACTED",
      "name": "Send a message",
      "webhookId": "REDACTED",
      "credentials": "REDACTED"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "REDACTED",
              "leftValue": "={{ $json.data.text }}",
              "rightValue": "=approved|Approved",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1248,
        0
      ],
      "id": "REDACTED",
      "name": "If"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=## Escalated Query\n\n<query>\n{{ $('Get row(s) in sheet').item.json.message }}\n</query>\n\n<ticketid>\n{{ $('Get row(s) in sheet').item.json['ticket id'] }}\n</ticketid>\n\n## Proposed Resolution\n\n<proposed>\n{{ $('AI Agent').item.json.output }}\n</prosposed>\n\n## Human Feedback\n\n<human>\n{{ $json.data.text }}\n<human>",
        "options": {
          "systemMessage": "=You are part of an escalations team\nYou receive approved escalations and you generate responses to them\n\nYou receive the original escalation ticket details, the proposal on how to resolve the issue, as well as the human CSM feedback\n\nGenerate your reply for email format\n\nNote your response is the final response to resolve the issue\nNo further contact will be made with the customer\n\nKeep your reply short. "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1504,
        -240
      ],
      "id": "REDACTED",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-sonnet-4-20250514",
          "cachedResultName": "Claude 4 Sonnet"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        1472,
        -80
      ],
      "id": "REDACTED",
      "name": "Anthropic Chat Model",
      "credentials": "REDACTED"
    },
    {
      "parameters": {
        "authentication": "accessToken",
        "operation": "__CUSTOM_API_CALL__"
      },
      "type": "n8n-nodes-base.shopifyTool",
      "typeVersion": 1,
      "position": [
        1744,
        -64
      ],
      "id": "REDACTED",
      "name": "Shopify Tool",
      "credentials": "REDACTED"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1824,
        -240
      ],
      "id": "REDACTED",
      "name": "Respond"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        368,
        -240
      ],
      "id": "REDACTED",
      "name": "Start"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=## Escalated Query\n\n<query>\n{{ $('Get row(s) in sheet').item.json.message }}\n</query>\n\n<ticketid>\n{{ $('Get row(s) in sheet').item.json['ticket id'] }}\n</ticketid>\n\n## Proposed Resolution\n\n<proposed>\n{{ $('AI Agent').item.json.output }}\n</prosposed>\n\n## Human Feedback\n\n<human>\n{{ $json.data.text }}\n<human>",
        "messages": {
          "messageValues": [
            {
              "message": "You are part of an escalations team  You receive the original escalation ticket details, the proposal on how to resolve the issue, as well as the human CSM feedback  You always work with proposals that were denied by the human  Your job is to take the proposal and update it as per human feedback. Then output the revised proposal.   Keep everything the same aside from the changes you made"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1472,
        80
      ],
      "id": "REDACTED",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1440,
        240
      ],
      "id": "REDACTED",
      "name": "OpenAI Chat Model1",
      "credentials": "REDACTED"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1824,
        208
      ],
      "id": "REDACTED",
      "name": "Flow Control"
    }
  ],
  "pinData": {},
  "connections": {
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "order_tracking": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "known_issues": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Respond",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Shopify Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Flow Control",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Flow Control": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9ec3066b-47dd-4e66-aa4f-f667141f67a3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bec443f32f282145c50b8dcfc610fa7d9dd1cd11f81d464c6dad140e893c49a0"
  },
  "id": "REDACTED",
  "tags": []
}