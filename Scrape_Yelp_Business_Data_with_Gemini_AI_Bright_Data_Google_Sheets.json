{
  "id": "a7VCjCT0yD0Ej6Wm",
  "meta": {
    "instanceId": "bc8ca75c203589705ae2e446cad7181d6f2a7cc1766f958ef9f34810e53b8cb2",
    "templateCredsSetupCompleted": true
  },
  "name": "Yelp Business Finder: Scraping Local Businesses by Keyword, Category & Location Using Bright Data and Google Sheets",
  "tags": [],
  "nodes": [
    {
      "id": "56103501-5678-4e90-924a-c41dc5652c53",
      "name": "Fetch Snapshot Results",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -640,
        -460
      ],
      "parameters": {
        "url": "=https://api.brightdata.com/datasets/v3/snapshot/{{ $json.snapshot_id }}",
        "options": {},
        "sendQuery": true,
        "sendHeaders": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "format",
              "value": "json"
            }
          ]
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_BRIGHTDATA_API_TOKEN"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "b331c7cd-dfe8-47f2-896e-a062a3801b8a",
      "name": "On Form Submission",
      "type": "n8n-nodes-base.formTrigger",
      "position": [
        -3040,
        -440
      ],
      "webhookId": "37d0e84c-0cda-47f8-826d-9ae5b22ba1d5",
      "parameters": {
        "options": {},
        "formTitle": "YelpDataScraper",
        "formFields": {
          "values": [
            {
              "fieldLabel": "country"
            },
            {
              "fieldLabel": "category"
            },
            {
              "fieldLabel": "location"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "304245ae-cda6-430d-9f6c-9a0b66781db1",
      "name": "Check Delivery Status of Snapshot ID",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1640,
        -440
      ],
      "parameters": {
        "url": "=https://api.brightdata.com/datasets/v3/progress/{{ $json.snapshot_id }}",
        "options": {},
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_BRIGHTDATA_API_TOKEN"
            }
          ]
        }
      },
      "typeVersion": 4.2,
      "alwaysOutputData": true
    },
    {
      "id": "a26943e0-ca71-460a-8eee-df027866997f",
      "name": "Check Final Status",
      "type": "n8n-nodes-base.if",
      "position": [
        -1000,
        -440
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "35ed620d-b5d5-4e97-bcc5-52b283d85616",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.status }}",
              "rightValue": "ready"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "d60385e6-5093-439e-9b70-3dbeb8f9f537",
      "name": "Wait 1 Minute",
      "type": "n8n-nodes-base.wait",
      "position": [
        -1320,
        -440
      ],
      "webhookId": "10b45556-5e91-4387-abd0-f9078b220286",
      "parameters": {
        "unit": "minutes",
        "amount": 1
      },
      "typeVersion": 1.1
    },
    {
      "id": "14d497b0-819b-4106-b095-439b63a77fd5",
      "name": "Google Sheets - Save Business Data",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -280,
        -460
      ],
      "parameters": {
        "columns": {
          "value": {
            "url": "={{ $json.url }}",
            "name": "={{ $json.name }}",
            "address": "={{ $json.address }}",
            "website": "={{ $json.website }}",
            "categories": "={{ $json.categories }}",
            "phone_number": "={{ $json.phone_number }}",
            "reviews_count": "={{ $json.reviews_count }}",
            "overall_rating": "={{ $json.overall_rating }}"
          },
          "schema": [
            {
              "id": "overall_rating",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "overall_rating",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "reviews_count",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "reviews_count",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "url",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "url",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "name",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "categories",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "categories",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "website",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "website",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "phone_number",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "phone_number",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "address",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "address",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/YOUR_GOOGLE_SHEET_ID/edit#gid=0",
          "cachedResultName": "Yelp scraper data by keyword"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "YOUR_GOOGLE_SHEET_ID",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/YOUR_GOOGLE_SHEET_ID/edit?usp=drivesdk",
          "cachedResultName": "Yelp Business Data Scraper"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "YOUR_GOOGLE_SHEETS_CREDENTIAL_ID",
          "name": "Google Sheets OAuth2"
        }
      },
      "typeVersion": 4.6
    },
    {
      "id": "821ee30e-faaf-4d97-b0bc-cd81b9162e27",
      "name": "AI Agent - Validate Input",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -2740,
        -440
      ],
      "parameters": {
        "text": "=You are an intelligent assistant helping to extract structured business data using Bright Data. Based on the user's form inputs, generate a concise and clear structured JSON block that maximizes accuracy and relevance for the data scraper.\n\nInput:\n- Country: {{ $json.country }}\n- Location: {{ $json.location }}\n- Category: {{ $json.category }}\n\nYour task:\n1. Validate and clean the location and category (remove typos, use popular names).\n2. Convert the inputs into a well-formatted JSON object optimized for Bright Data's \"search_filters\" scraping.\n3. Ensure the `category` aligns with Yelp's known categories.\n4. Include synonyms or nearby areas in location if needed.\n\nRespond ONLY with a cleaned JSON block like:\n```json\n{\n  \"country\": \"{{ $json.country }}\",\n  \"location\": \"{{ $json.location }}\",\n  \"category\": \"{{ $json.category }}\"\n}\nRespond only with a valid compact JSON object like:\n{\"country\": \"...\", \"location\": \"...\", \"category\": \"...\"}\nNo explanation or markdown.\n",
        "options": {},
        "promptType": "define"
      },
      "typeVersion": 2
    },
    {
      "id": "067bdca2-7be4-4af5-add5-4a0b911ae870",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        -2820,
        -60
      ],
      "parameters": {
        "options": {},
        "modelName": "models/gemini-1.5-flash"
      },
      "credentials": {
        "googlePalmApi": {
          "id": "YOUR_GOOGLE_GEMINI_CREDENTIAL_ID",
          "name": "Google Gemini API"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "c09661f3-c8b8-4b75-9515-999a088abb46",
      "name": "Format AI Response for Scraper",
      "type": "n8n-nodes-base.code",
      "position": [
        -2360,
        -440
      ],
      "parameters": {
        "jsCode": "const rawOutput = $json.output || \"\";\n\n// Clean triple backticks if AI added them\nconst cleaned = rawOutput\n  .replace(/```json/g, '')\n  .replace(/```/g, '')\n  .trim();\n\n// Try to parse\nlet parsed;\ntry {\n  parsed = JSON.parse(cleaned);\n} catch (error) {\n  throw new Error(\"❌ JSON parse failed: \" + error.message + \"\\n\\nRaw cleaned output:\\n\" + cleaned);\n}\n\n// Log parsed output for debugging\nif (!parsed || !parsed.country || !parsed.location || !parsed.category) {\n  throw new Error(\"❌ Missing required fields.\\n\\nParsed Object:\\n\" + JSON.stringify(parsed, null, 2));\n}\n\n// Return structured JSON\nreturn [\n  {\n    json: {\n      country: parsed.country.trim(),\n      location: parsed.location.trim(),\n      category: parsed.category.trim()\n    }\n  }\n];\n"
      },
      "typeVersion": 2
    },
    {
      "id": "66e5c0f7-5964-4ea0-b753-7671a315a31e",
      "name": "Yelp Data Scraper - Bright Data",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2020,
        -440
      ],
      "parameters": {
        "url": "https://api.brightdata.com/datasets/v3/trigger",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"input\": [\n    {\n      \"country\": \"{{ $json.country }}\",\n      \"location\": \"{{ $json.location }}\",\n      \"category\": \"{{ $json.category }}\"\n    }\n  ],\n  \"custom_output_fields\": [\n    \"name\",\n    \"overall_rating\",\n    \"reviews_count\",\n    \"categories\",\n    \"website\",\n    \"phone_number\",\n    \"address\",\n    \"url\"\n  ]\n}\n",
        "sendBody": true,
        "sendQuery": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "queryParameters": {
          "parameters": [
            {
              "name": "dataset_id",
              "value": "YOUR_YELP_DATASET_ID"
            },
            {
              "name": "include_errors",
              "value": "true"
            },
            {
              "name": "type",
              "value": "discover_new"
            },
            {
              "name": "discover_by",
              "value": "search_filters"
            },
            {
              "name": "limit_per_input",
              "value": "10"
            }
          ]
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_BRIGHTDATA_API_TOKEN"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "8c51dc47-d5a0-4ca5-8567-4800a953b8cb",
      "name": "Sticky Note - Form Trigger",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3100,
        -580
      ],
      "parameters": {
        "width": 280,
        "height": 340,
        "content": "🟢 1. On Form Submission\nTriggers the workflow when the user submits a form with country, location, and category values for Yelp business scraping."
      },
      "typeVersion": 1
    },
    {
      "id": "ba8030a4-77c1-44d1-8002-dd18e526e96a",
      "name": "Sticky Note - AI Validation",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2800,
        -580
      ],
      "parameters": {
        "color": 3,
        "width": 360,
        "height": 320,
        "content": "🤖 2. AI Agent - Validate Input\nUses Google Gemini AI to validate and clean the user's inputs (country, location, category) for proper formatting and relevance to Yelp categories."
      },
      "typeVersion": 1
    },
    {
      "id": "42012c98-457e-4ddf-8e5d-fd383a05a78d",
      "name": "Sticky Note - AI Model",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3040,
        -160
      ],
      "parameters": {
        "color": 4,
        "width": 620,
        "height": 240,
        "content": "🔵 3. Google Gemini Chat Model\nProvides AI capabilities to transform raw form inputs into clean, structured JSON optimized for Bright Data's search filters."
      },
      "typeVersion": 1
    },
    {
      "id": "63626dab-0eac-45ca-8b94-0824673d32ff",
      "name": "Sticky Note - Format Response",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2420,
        -560
      ],
      "parameters": {
        "color": 5,
        "width": 280,
        "height": 300,
        "content": "🔧 4. Format AI Response for Scraper\nParses the cleaned JSON returned by the AI and ensures it's properly formatted for Bright Data API consumption."
      },
      "typeVersion": 1
    },
    {
      "id": "8beb6d5f-eb92-4c10-8b95-6241973e4b75",
      "name": "Sticky Note - Data Scraper",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2120,
        -560
      ],
      "parameters": {
        "color": 6,
        "width": 300,
        "height": 300,
        "content": "🌐 5. Yelp Data Scraper - Bright Data\nSends the cleaned JSON input to Bright Data's Yelp dataset using the search_filters trigger to extract business information."
      },
      "typeVersion": 1
    },
    {
      "id": "75affc5d-d11b-4ad7-a3ef-e7adcca1a3d1",
      "name": "Sticky Note - Status Check",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1760,
        -560
      ],
      "parameters": {
        "color": 3,
        "width": 340,
        "height": 300,
        "content": "⏱ 6. Check Delivery Status of Snapshot ID\nMonitors the progress of the Bright Data scraping task using the snapshot_id returned from the previous step."
      },
      "typeVersion": 1
    },
    {
      "id": "f61ef2ba-c05a-4f24-8fb0-1fce34ab8413",
      "name": "Sticky Note - Wait Timer",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1380,
        -560
      ],
      "parameters": {
        "color": 4,
        "width": 280,
        "height": 320,
        "content": "⏰ 7. Wait 1 Minute\nWaits for 1 minute before rechecking Bright Data status to allow sufficient time for the data scraping to complete."
      },
      "typeVersion": 1
    },
    {
      "id": "bac612fb-371d-499f-89c8-08b4a3c859ca",
      "name": "Sticky Note - Final Status",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1100,
        -560
      ],
      "parameters": {
        "color": 5,
        "width": 320,
        "height": 300,
        "content": "🔄 8. Check Final Status\nConditionally checks if the status from Bright Data is \"ready\". If not ready, loops back to wait again until data is available."
      },
      "typeVersion": 1
    },
    {
      "id": "92ee614c-78b6-4593-88d9-69b23abd5255",
      "name": "Sticky Note - Fetch Results",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -700,
        -560
      ],
      "parameters": {
        "color": 6,
        "width": 280,
        "height": 300,
        "content": "📥 9. Fetch Snapshot Results\nWhen Bright Data status is \"ready\", this step fetches the complete dataset snapshot containing all scraped Yelp business data."
      },
      "typeVersion": 1
    },
    {
      "id": "c55c18e9-9bd1-401e-bce6-b980f3559c79",
      "name": "Sticky Note - Save Data",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -360,
        -560
      ],
      "parameters": {
        "color": 3,
        "width": 280,
        "height": 300,
        "content": "📊 10. Google Sheets - Save Business Data\nAppends the final Yelp business data (name, rating, reviews, phone, website, address, etc.) into your designated Google Sheet."
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c092b9ac-181d-4332-8137-43080e4fe924",
  "connections": {
    "Wait 1 Minute": {
      "main": [
        [
          {
            "node": "Check Final Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Final Status": {
      "main": [
        [
          {
            "node": "Fetch Snapshot Results",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Delivery Status of Snapshot ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On Form Submission": {
      "main": [
        [
          {
            "node": "AI Agent - Validate Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Snapshot Results": {
      "main": [
        [
          {
            "node": "Google Sheets - Save Business Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent - Validate Input",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent - Validate Input": {
      "main": [
        [
          {
            "node": "Format AI Response for Scraper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format AI Response for Scraper": {
      "main": [
        [
          {
            "node": "Yelp Data Scraper - Bright Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Yelp Data Scraper - Bright Data": {
      "main": [
        [
          {
            "node": "Check Delivery Status of Snapshot ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Delivery Status of Snapshot ID": {
      "main": [
        [
          {
            "node": "Wait 1 Minute",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}