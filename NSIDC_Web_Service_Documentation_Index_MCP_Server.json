{
  "id": "HMgIJX4TlYI1Z80A",
  "meta": null,
  "name": "NSIDC Web Service Documentation Index MCP Server",
  "tags": [],
  "nodes": [
    {
      "id": "00781960-0890-4f3d-8e9f-043dfa058ea1",
      "name": "Setup Instructions",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1380,
        -240
      ],
      "parameters": {
        "color": 4,
        "height": 1020,
        "content": "### ‚öôÔ∏è Setup Instructions\n\n1. **Import Workflow**: \nLoad this workflow into your n8n instance\n\n2. **Authentication**: \nNo authentication required\n\n3. **Activate Workflow**:\nEnable the workflow to start the MCP server\n\n4. **Get MCP URL**: \nCopy the webhook URL from the MCP trigger\n\n5. **Connect AI Agent**:\nUse the MCP URL in your AI agent configuration\n\n\n### üí° Usage Notes\n‚Ä¢ Parameters are auto-populated by AI using $fromAI() expressions\n‚Ä¢ With 4 API endpoints available as tools\n‚Ä¢ Responses maintain original API structure\n\n\n### üõ†Ô∏è Customization\n‚Ä¢ Add data transformation nodes if needed\n‚Ä¢ Implement custom error handling\n‚Ä¢ Add logging or monitoring nodes\n\n‚Ä¢ Modify parameter defaults in any HTTP request node as needed\n\n### üí¨ Need Help?\nPing me on [discord](https://discord.me/cfomodz) for integration guidance and custom automations. Check the [n8n documentation](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolmcp/) for more information."
      },
      "typeVersion": 1
    },
    {
      "id": "2e6d6076-8a9b-4a43-9ff9-aa418273f5c4",
      "name": "Workflow Overview",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        -240
      ],
      "parameters": {
        "width": 420,
        "height": 760,
        "content": "## üõ†Ô∏è NSIDC Web Service Documentation Index MCP Server ‚úÖ 4 operations\n\n### About\nThis API allows programmers to build National Snow and Ice Data Center data and metadata services into their applications.\n\n### üîß How it Works\n\nThis workflow converts the NSIDC Web Service Documentation Index API into an MCP-compatible interface for AI agents.\n\n‚Ä¢ **MCP Trigger**: Serves as your server endpoint for AI agent requests\n‚Ä¢ **HTTP Request Nodes**: Handle API calls to http://nsidc.org/api/dataset/2\n‚Ä¢ **AI Expressions**: Automatically populate parameters via `$fromAI()` placeholders\n‚Ä¢ **Native Integration**: Returns responses directly to the AI agent\n\n\n### üìã Available Operations (4 endpoints)\n\n**Swagger Docs (4 operations)**\nRetrieve Search Facets, Search Documents, Get Search Engine Description, Suggest Search Terms\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "d0981b3a-e051-4046-870b-b2ad2d209d45",
      "name": "NSIDC Web Service Documentation Index MCP Server",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        -620,
        -240
      ],
      "webhookId": "d293583b-a492-4d03-a9f7-7e2d62afab54",
      "parameters": {
        "path": "nsidc-web-service-documentation-index-mcp"
      },
      "typeVersion": 1
    },
    {
      "id": "e2fb61b9-be03-4353-9eac-64bf32d965e0",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -660,
        -120
      ],
      "parameters": {
        "color": 2,
        "width": 900,
        "height": 220,
        "content": "## Swagger Docs"
      },
      "typeVersion": 1
    },
    {
      "id": "cfd016d8-5379-46e7-8817-4cdda664c586",
      "name": "Retrieve Search Facets",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -520,
        -60
      ],
      "parameters": {
        "url": "=http://nsidc.org/api/dataset/2/Facets",
        "options": {},
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "searchTerms",
              "value": "={{ $fromAI('searchTerms', 'URL-encoded keyword or keywords desired by the client; OpenSearch 1.1', 'string') }}"
            },
            {
              "name": "count",
              "value": "={{ $fromAI('count', 'The number of search results per page desired by the client; OpenSearch 1.1', 'number', 25) }}"
            },
            {
              "name": "startIndex",
              "value": "={{ $fromAI('startIndex', 'First search result desired by the search client; OpenSearch 1.1', 'number', 1) }}"
            },
            {
              "name": "spatial",
              "value": "={{ $fromAI('spatial', '4 comma separated values - W, S, E, N; OpenSearch-Geo 1.0, \"box\" parameter', 'string', '-180.0,-90.0,180.0,90.0') }}"
            },
            {
              "name": "sortKeys",
              "value": "={{ $fromAI('sortKeys', 'Sort the results by most relevant (default), smallest or largest spatial area, shortest or longest temporal duration, or most recently updated; partial implementation of OpenSearch SRU 1.0', 'string', 'score,,desc') }}"
            },
            {
              "name": "startDate",
              "value": "={{ $fromAI('startDate', 'The start date in yyyy-mm-dd format', 'string') }}"
            },
            {
              "name": "endDate",
              "value": "={{ $fromAI('endDate', 'The end date in yyyy-mm-dd format', 'string') }}"
            },
            {
              "name": "facetFilters",
              "value": "={{ $fromAI('facetFilters', 'Describes faceted restrictions on the search. A URL-encoded JSON object where the keys are the names of the facet, and the values are arrays of the selected facet values', 'string') }}"
            },
            {
              "name": "source",
              "value": "={{ $fromAI('source', 'Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC', 'string', 'NSIDC') }}"
            }
          ]
        },
        "toolDescription": "View the facet information corresponding to a search\n\nParameters:\n- Query parameters:\n  ‚Ä¢ searchTerms (optional) - URL-encoded keyword or keywords desired by the client; OpenSearch 1.1\n  ‚Ä¢ count (optional) - Number of search results per page desired by the client; OpenSearch 1.1\n  ‚Ä¢ startIndex (optional) - First search result desired by the search client; OpenSearch 1.1\n  ‚Ä¢ spatial (optional) - 4 comma separated values - W, S, E, N; OpenSearch-Geo 1.0, \"box\" parameter\n  ‚Ä¢ sortKeys (optional) - Sort the results by most relevant (default), smallest or largest spatial area, shortest or longest temporal duration, or most recently updated; partial implementation of OpenSearch SRU 1.0\n  ‚Ä¢ startDate (optional) - Start date in yyyy-mm-dd format\n  ‚Ä¢ endDate (optional) - End date in yyyy-mm-dd format\n  ‚Ä¢ facetFilters (optional) - Describes faceted restrictions on the search. A URL-encoded JSON object where the keys are the names of the facet, and the values are arrays of the selected facet values\n  ‚Ä¢ source (optional) - Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC"
      },
      "typeVersion": 4.2
    },
    {
      "id": "cb6e1937-482a-4150-951d-687eb2da2c4d",
      "name": "Search Documents",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -320,
        -60
      ],
      "parameters": {
        "url": "=http://nsidc.org/api/dataset/2/OpenSearch",
        "options": {},
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "searchTerms",
              "value": "={{ $fromAI('searchTerms', 'URL-encoded keyword or keywords desired by the client; OpenSearch 1.1', 'string') }}"
            },
            {
              "name": "count",
              "value": "={{ $fromAI('count', 'The number of search results per page desired by the client; OpenSearch 1.1', 'number', 25) }}"
            },
            {
              "name": "startIndex",
              "value": "={{ $fromAI('startIndex', 'First search result desired by the search client; OpenSearch 1.1', 'number', 1) }}"
            },
            {
              "name": "spatial",
              "value": "={{ $fromAI('spatial', '4 comma separated values - W, S, E, N; OpenSearch-Geo 1.0, \"box\" parameter', 'string', '-180.0,-90.0,180.0,90.0') }}"
            },
            {
              "name": "sortKeys",
              "value": "={{ $fromAI('sortKeys', 'Sort the results by most relevant (default), smallest or largest spatial area, shortest or longest temporal duration, or most recently updated; partial implementation of OpenSearch SRU 1.0', 'string', 'score,,desc') }}"
            },
            {
              "name": "startDate",
              "value": "={{ $fromAI('startDate', 'The start date in yyyy-mm-dd format', 'string') }}"
            },
            {
              "name": "endDate",
              "value": "={{ $fromAI('endDate', 'The end date in yyyy-mm-dd format', 'string') }}"
            },
            {
              "name": "facetFilters",
              "value": "={{ $fromAI('facetFilters', 'Describes faceted restrictions on the search. A URL-encoded JSON object where the keys are the names of the facet, and the values are arrays of the selected facet values', 'string') }}"
            },
            {
              "name": "source",
              "value": "={{ $fromAI('source', 'Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC', 'string', 'NSIDC') }}"
            }
          ]
        },
        "toolDescription": "Search documents using the OpenSearch 1.1 Specification\n\nParameters:\n- Query parameters:\n  ‚Ä¢ searchTerms (optional) - URL-encoded keyword or keywords desired by the client; OpenSearch 1.1\n  ‚Ä¢ count (optional) - Number of search results per page desired by the client; OpenSearch 1.1\n  ‚Ä¢ startIndex (optional) - First search result desired by the search client; OpenSearch 1.1\n  ‚Ä¢ spatial (optional) - 4 comma separated values - W, S, E, N; OpenSearch-Geo 1.0, \"box\" parameter\n  ‚Ä¢ sortKeys (optional) - Sort the results by most relevant (default), smallest or largest spatial area, shortest or longest temporal duration, or most recently updated; partial implementation of OpenSearch SRU 1.0\n  ‚Ä¢ startDate (optional) - Start date in yyyy-mm-dd format\n  ‚Ä¢ endDate (optional) - End date in yyyy-mm-dd format\n  ‚Ä¢ facetFilters (optional) - Describes faceted restrictions on the search. A URL-encoded JSON object where the keys are the names of the facet, and the values are arrays of the selected facet values\n  ‚Ä¢ source (optional) - Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC"
      },
      "typeVersion": 4.2
    },
    {
      "id": "a661ece6-0252-4ee2-917b-8c886328b6ea",
      "name": "Get Search Engine Description",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -120,
        -60
      ],
      "parameters": {
        "url": "=http://nsidc.org/api/dataset/2/OpenSearchDescription",
        "options": {},
        "toolDescription": "Describes the web interface of NSIDC's data search engine"
      },
      "typeVersion": 4.2
    },
    {
      "id": "b5052202-b6e7-4f14-bcb3-f516ae80de6e",
      "name": "Suggest Search Terms",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        80,
        -60
      ],
      "parameters": {
        "url": "=http://nsidc.org/api/dataset/2/suggest",
        "options": {},
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ $fromAI('q', 'Search terms typed into the interface (minimum two characters)', 'string') }}"
            },
            {
              "name": "source",
              "value": "={{ $fromAI('source', 'Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC', 'string', 'NSIDC') }}"
            }
          ]
        },
        "toolDescription": "Suggest search terms based on a partial query\n\nParameters:\n- Query parameters:\n  ‚Ä¢ q (required) - Search terms typed into the interface (minimum two characters)\n  ‚Ä¢ source (required) - Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC"
      },
      "typeVersion": 4.2
    }
  ],
  "active": false,
  "shared": [
    {
      "role": "workflow:owner",
      "project": {
        "id": "G5fce9xGuBAsWBXe",
        "icon": null,
        "name": "David Ashby <david.ashby.lds@gmail.com>",
        "type": "personal",
        "createdAt": "2025-06-04T02:55:02.013Z",
        "updatedAt": "2025-06-04T02:56:01.361Z",
        "projectRelations": [
          {
            "role": "project:personalOwner",
            "user": {
              "id": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
              "role": "global:owner",
              "email": "david.ashby.lds@gmail.com",
              "disabled": false,
              "lastName": "Ashby",
              "settings": {
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749357655581
                },
                "userActivated": true,
                "userActivatedAt": 1749075994495,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "3N3vVikZb3MckFYm"
              },
              "createdAt": "2025-06-04T02:55:01.745Z",
              "firstName": "David",
              "isPending": false,
              "updatedAt": "2025-06-08T04:40:58.399Z",
              "mfaEnabled": false,
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_n8n_version": "1.95.3",
                "personalization_survey_submitted_at": "2025-06-04T02:56:07.075Z"
              }
            },
            "userId": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
            "createdAt": "2025-06-04T02:55:02.013Z",
            "projectId": "G5fce9xGuBAsWBXe",
            "updatedAt": "2025-06-04T02:55:02.013Z"
          }
        ]
      },
      "createdAt": "2025-07-03T05:55:55.669Z",
      "projectId": "G5fce9xGuBAsWBXe",
      "updatedAt": "2025-07-03T05:55:55.669Z",
      "workflowId": "HMgIJX4TlYI1Z80A"
    }
  ],
  "pinData": {},
  "settings": {
    "timezone": "America/New_York"
  },
  "createdAt": "2025-07-03T05:55:55.667Z",
  "updatedAt": "2025-07-03T16:37:31.000Z",
  "versionId": "d321e544-797f-4c6b-a3c7-9cfea3802af5",
  "isArchived": false,
  "staticData": null,
  "connections": {
    "Search Documents": {
      "ai_tool": [
        [
          {
            "node": "NSIDC Web Service Documentation Index MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Suggest Search Terms": {
      "ai_tool": [
        [
          {
            "node": "NSIDC Web Service Documentation Index MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Search Facets": {
      "ai_tool": [
        [
          {
            "node": "NSIDC Web Service Documentation Index MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Search Engine Description": {
      "ai_tool": [
        [
          {
            "node": "NSIDC Web Service Documentation Index MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "triggerCount": 0
}