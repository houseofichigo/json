{
  "meta": {
    "instanceId": "INSTANCE_ID_HERE",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "id": "121a6e68-f406-41f1-aaeb-dc04c8532c2c",
      "name": "✍️ Content Creator - OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        -1300,
        160
      ],
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "chatgpt-4o-latest",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "options": {},
        "messages": {
          "values": [
            {
              "content": "=You are creating LinkedIn content for [YOUR_NAME], an experienced entrepreneur and AI enthusiast.\n\n**🧠 CONTEXT ABOUT YOU:**\n- [ACHIEVEMENT 1 - e.g., Founded Company X (description, raised $X)]  \n- [ACHIEVEMENT 2 - e.g., Founded Company Y (description, raised $X)]\n- [BACKGROUND - e.g., Countries lived in, education, etc.]\n- [CURRENT PROJECT - e.g., Currently launching Project Z - brief description]\n- [PASSION/FOCUS - e.g., Obsessed with AI automation, \"AIpreneur\" teams]\n- [BELIEF - e.g., Believes small AI-powered teams will outperform large corporations]\n\n**📋 PRIMARY CONTENT FOUNDATION:**\n- Topic: {{ $('Webhook').item.json.body.Topic }}\n- Post Type:  {{ $('Webhook').item.json.body.Post_Type || \"tip\"}}\n- Length:  {{ $('Webhook').item.json.body.Length || \"medium\"}}\n- Include Company:  {{ $('Webhook').item.json.body.Include_Company || \"no\"}}\n- Personal Story: {{ $('Webhook').item.json.body.Personal_Story || \"auto\"}}\n- Your Main Content/Experience: {{ $('Webhook').item.json.body.Additional_Context || \"\"}}\n\n**🎯 CONTENT CREATION PRIORITY:**\n1. **START with your topic and personal experience/context** - this is your main story\n2. **BUILD the core message** around your additional context and expertise  \n3. **ENHANCE with research data** only where it strengthens your points\n4. **Keep your story/experience as the primary narrative**\n\n**📊 SUPPORTING RESEARCH DATA (Use Selectively):**\n{{ $json.choices[0].message.content }}\n\n**🔧 HOW TO USE RESEARCH AS SUPPORT:**\n- **Primary**: Your topic + additional context = 80% of the content\n- **Supporting**: Research data = 20% enhancement/validation\n- **Use research to**: Validate your experience, add credibility, provide context\n- **Don't let research**: Overwhelm your story, replace your insights, become the main focus\n\n**📝 CONTENT CREATION PROCESS:**\n\n**Step 1: Build Core Content**\n- Start with your topic and additional context\n- Create the main narrative from your experience\n- Include specific details, numbers, examples from YOUR context\n\n**Step 2: Enhance with Research**\n- Look for 1-2 research points that support your story\n- Add them naturally to strengthen credibility\n- Use phrases like \"Recent data confirms...\" or \"This aligns with research showing...\"\n\n**Step 3: Maintain Your Voice**\n- Keep your personal experience as the hero of the story\n- Let research play a supporting role, not the lead\n\n**CONTENT FRAMEWORKS BY TYPE:**\n\n**For TIPS:**\n\"Based on [your experience from additional context], here's what works: [your advice]. Recent research backs this up: [1 supporting data point]\"\n\n**For STORIES:**\n\"[Your personal story from additional context]. What I learned: [lesson]. Turns out the data shows [supporting research finding]\"\n\n**For RESULTS:**\n\"I achieved [your specific results from context]. Here's how: [your method]. Industry data shows [supporting statistic]\"\n\n**For CONTRARIAN:**\n\"Everyone says [common belief]. But [your experience] taught me [different approach]. Research confirms: [supporting data]\"\n\n**🚫 AVOID:**\n- Leading with research instead of your story\n- Using more research than personal content\n- Generic advice not tied to your additional context\n- Letting research overshadow your expertise\n\n**✅ ENSURE:**\n- Your topic and additional context drive 80% of the content\n- Research enhances but doesn't replace your story\n- Specific details from YOUR experience are prominent\n- Research feels natural, not forced\n\n**🚨 CRITICAL COMPANY INCLUSION RULES (MUST FOLLOW):**\n\n**If Include_Company = \"no\":**\n- DO NOT mention \"[COMPANY_NAME]\" by name AT ALL\n- DO NOT reference \"we started building [company]\" \n- DO NOT mention \"our startup\" or \"our platform\"\n- GENERALIZE company references: \"When building my latest startup\" → \"When building a startup\"\n- REMOVE specific company details from additional context\n- Focus on general entrepreneurship experience instead\n\n**If Include_Company = \"subtle\":**\n- Brief mention only: \"At my current startup\" or \"Building [COMPANY_NAME] has taught me\"\n- No detailed company descriptions\n\n**If Include_Company = \"yes\":**\n- Natural integration of company context\n\n**PRE-GENERATION CHECK:**\nBefore writing, check: Does Include_Company = \"no\"? If yes, remove ALL company-specific references and make the advice general.\n\nGenerate a LinkedIn post that starts with your experience and uses research to enhance credibility:"
            }
          ]
        }
      },
      "credentials": {
        "openAiApi": {
          "id": "OPENAI_CREDENTIAL_ID_HERE",
          "name": "OpenAI API"
        }
      },
      "typeVersion": 1.8
    },
    {
      "id": "9eb1e5ef-f88c-41ca-9784-bf8c37a8a983",
      "name": "🎨 Voice Refiner - OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        -924,
        160
      ],
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "chatgpt-4o-latest",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "options": {},
        "messages": {
          "values": [
            {
              "content": "=Polish this LinkedIn post to sound more like [YOUR_NAME]'s natural voice, while preserving all the key content and target length.\n\n**ORIGINAL POST:** {{$json.message.content}}\n\n**📏 LENGTH REQUIREMENT:** {{ $('Webhook').item.json.body.Length || \"medium\"}}\n- **Short**: Must stay 400-800 characters\n- **Medium**: Must stay 800-1200 characters  \n- **Long**: Must stay 1200-1500+ characters\n\n**🎯 SUBTLE VOICE ADJUSTMENTS ONLY:**\n\n**KEEP EXACTLY AS IS:**\n- All research data, statistics, and factual information\n- Main arguments and key insights\n- Structure and flow of ideas\n- Any specific examples or case studies\n- **TARGET LENGTH CATEGORY** - do not change short to medium, or medium to long\n\n**MAKE THESE MINOR ADJUSTMENTS:**\n- Replace any corporate buzzwords with simpler language\n- Add your signature phrases only where they fit naturally\n- Ensure it sounds conversational, not formal\n- Fix any awkward phrasing to flow better\n- Make sure it ends with an engaging question\n- **Use shorter sentences and bullet points instead of long paragraphs**\n- **Always include 1-2 relevant emojis in the final output**\n\n**[YOUR_NAME]'S NATURAL LANGUAGE PATTERNS:**\n- Uses \"Here's the thing\" only for contrarian points (don't force it)\n- References specific metrics naturally: \"in 30 minutes\", \"3x faster\"\n- Asks direct questions: \"What's your experience?\", \"Am I missing something?\"\n- Prefers \"Honestly\" or \"The truth is\" for candid admissions\n- Uses \"Here's what I learned\" or \"What I discovered\" for insights\n- Says \"Bottom line\" for conclusions\n\n**🚫 DO NOT:**\n- Add personal stories that weren't in the original\n- Change or embellish research data or statistics\n- Add controversy or bold claims that weren't there\n- Restructure the entire post\n- **Change the length category** (short/medium/long)\n- Add promotional content about your company unless it was already there\n- Use overly long sentences or dense paragraphs\n\n**✅ DO:**\n- Remove corporate speak (\"leverage\" → \"use\", \"unlock\" → \"discover\")\n- Make it sound more conversational and authentic\n- Break up long sentences into shorter, punchier ones\n- Use bullet points or line breaks for better readability\n- **Add 1-2 relevant emojis naturally within the content**\n- Ensure smooth flow between sentences\n- **Stay within the target length range**\n\n**FORMATTING PREFERENCES:**\n- Short, punchy sentences over long ones\n- Bullet points for lists or key points\n- Natural line breaks for visual breathing room\n- Emojis used strategically (not excessively)\n\n**LENGTH CONTROL:**\n- If original is too long for target: Trim unnecessary words while keeping key insights\n- If original is too short for target: Add natural elaboration without changing the core message\n- If original is perfect length: Focus only on voice, don't change length significantly\n\n**GOAL:** The post should sound like you wrote it originally, stay within the specified length category, preserve all valuable content, use shorter sentences with better formatting, and include 1-2 relevant emojis.\n\nOutput just the post, no additional title or comment.\n\nPost:"
            }
          ]
        }
      },
      "credentials": {
        "openAiApi": {
          "id": "OPENAI_CREDENTIAL_ID_HERE",
          "name": "OpenAI API"
        }
      },
      "typeVersion": 1.8
    },
    {
      "id": "67b34c31-d345-4c03-992e-43d010d32c1f",
      "name": "📊 Content Scorer",
      "type": "n8n-nodes-base.code",
      "position": [
        -540,
        160
      ],
      "parameters": {
        "jsCode": "// Get the voice-refined content\nconst refinedPost = $input.first().json.message.content;\n\nconsole.log(\"Final post:\", refinedPost);\nconsole.log(\"Character count:\", refinedPost.length);\n\n// Simple scoring function\nfunction scorePost(post) {\n  let score = 0;\n  \n  // Length optimization\n  if (post.length >= 800 && post.length <= 1300) score += 3;\n  else if (post.length >= 500 && post.length <= 1500) score += 2;\n  else score += 1;\n  \n  // Engagement elements\n  if (post.includes('?')) score += 2;\n  if (post.match(/\\d+/g)) score += 2; // Contains numbers\n  if (post.includes('Here\\'s the thing')) score += 2;\n  if (post.includes(':')) score += 1;\n  \n  // Voice authenticity markers\n  if (post.includes('n8n') || post.includes('OpenAI') || post.includes('Mydra')) score += 1;\n  if (post.includes('minutes') || post.includes('hours')) score += 1;\n  \n  // Penalties for AI-speak\n  if (post.includes('game-changer') || post.includes('unlock')) score -= 3;\n  \n  return Math.max(0, score);\n}\n\nconst score = scorePost(refinedPost);\nconst timestamp = new Date().toISOString();\n\n// Simple status logic\nlet status;\nif (score >= 7) status = 'pending_review';\nelse if (score >= 5) status = 'needs_editing';\nelse status = 'needs_major_revision';\n\n// Return only the new scoring data\nreturn {\n  json: {\n    generated_post: refinedPost,\n    ai_score: score,\n    character_count: refinedPost.length,\n    status: status,\n    human_approved: false,\n    generated_at: timestamp\n  }\n};"
      },
      "typeVersion": 2
    },
    {
      "id": "3ef4644e-7c2e-4642-8bed-2ebbb30c9fb1",
      "name": "🖼️ Image Prompt Generator",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        -328,
        160
      ],
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "chatgpt-4o-latest",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "options": {},
        "messages": {
          "values": [
            {
              "content": "=You are an expert at creating compelling, abstract image prompts that capture the FEELING and CONCEPT of LinkedIn content, not literal representations.\n\n**LINKEDIN POST CONTENT:**\n{{$json.generated_post}}\n\n**POST SPECIFICATIONS:**\n- Topic: {{ $('Webhook').item.json.body.Topic }}\n- Category: {{ $('Webhook').item.json.body.Category }}\n- Post Type: {{ $('Webhook').item.json.body.Post_Type }}\n\n**CRITICAL RULES:**\n- NO brand names, company names, or readable text\n- NO literal tool representations\n- NO obvious references to specific technologies\n- CREATE abstract visual metaphors instead\n- FOCUS on emotions and concepts, not products\n\n**VISUAL METAPHOR APPROACH:**\n\n**Instead of showing tools → Show the OUTCOME:**\n- Don't show \"AI tools\" → Show \"effortless power\"\n- Don't show \"automation\" → Show \"seamless flow\"\n- Don't show \"small team\" → Show \"concentrated energy\"\n\n**Instead of literal → Show conceptual:**\n- Small team beating big team → David vs Goliath energy\n- AI efficiency → Smooth, flowing machinery\n- Smart tools → Precision instruments\n- Fast execution → Speed and motion\n\n**ABSTRACT VISUAL CONCEPTS:**\n\n**For efficiency/productivity:**\n\"Single powerful engine with clean, flowing energy lines radiating outward, representing concentrated power and efficiency\"\n\n**For small team vs big team:**\n\"Minimalist architectural composition showing one elegant, efficient structure outpacing multiple complex, cluttered buildings\"\n\n**For smart tools/AI:**\n\"Abstract geometric shapes that fit together perfectly, representing precision and intelligent design\"\n\n**For speed/agility:**\n\"Dynamic motion blur showing streamlined form cutting through static, heavy elements\"\n\n**ARTISTIC APPROACHES:**\n\n**Conceptual Photography:**\n- Physical objects as metaphors\n- Architectural elements\n- Light and shadow play\n- Motion and stillness contrast\n\n**Abstract Composition:**\n- Geometric relationships\n- Flow and energy\n- Balance and imbalance\n- Simplicity vs complexity\n\n**Environmental Storytelling:**\n- Clean vs cluttered spaces\n- Efficient vs wasteful setups\n- Modern vs outdated elements\n- Focused vs scattered energy\n\n**EXAMPLE TRANSFORMATIONS:**\n\n**Instead of:** \"Five AI tool icons around a person\"\n**Try:** \"Single beam of focused light cutting through complex, tangled shadows\"\n\n**Instead of:** \"Small team with AI tools\"\n**Try:** \"Minimalist workspace with one powerful, sleek object outshining a cluttered background\"\n\n**Instead of:** \"ChatGPT and n8n interfaces\"\n**Try:** \"Clean, flowing water cutting through rough, jagged rocks - representing efficiency through complexity\"\n\n**QUALITY SPECIFICATIONS:**\n- Professional photography or high-end 3D render\n- Dramatic, cinematic lighting\n- High contrast and visual impact\n- Abstract but emotionally resonant\n- Suitable for stopping social media scroll\n- No text, labels, or brand elements\n\n**PROCESS:**\n1. Identify the EMOTION of the post (empowerment, efficiency, breakthrough, etc.)\n2. Find a VISUAL METAPHOR that represents this emotion\n3. Create an ABSTRACT scene that embodies the metaphor\n4. Add PROFESSIONAL PHOTOGRAPHY specifications\n\nCreate an abstract, metaphorical image prompt that captures the essence and emotion of the post. Return just the prompt, nothing else.\n\nPrompt:"
            }
          ]
        }
      },
      "credentials": {
        "openAiApi": {
          "id": "OPENAI_CREDENTIAL_ID_HERE",
          "name": "OpenAI API"
        }
      },
      "typeVersion": 1.8
    },
    {
      "id": "35fd1c63-3643-44d8-995a-af9fb6b5d42e",
      "name": "🎨 Image Generator",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        268,
        160
      ],
      "parameters": {
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-1.1-pro/predictions",
        "method": "POST",
        "options": {},
        "jsonBody": "={\n  \"input\": {\n    \"prompt\": \"{{ $json.clean_prompt }}\",\n    \"prompt_upsampling\": true,\n    \"width\": 1024,\n    \"height\": 1024,\n    \"num_outputs\": 1,\n    \"aspect_ratio\": \"1:1\",\n    \"output_format\": \"webp\",\n    \"output_quality\": 100,\n    \"guidance\": 4,\n    \"safety_tolerance\": 2\n  }\n}",
        "sendBody": true,
        "jsonHeaders": "{\n  \"Content-Type\": \"application/json\",\n  \"Prefer\": \"wait\"\n}",
        "sendHeaders": true,
        "specifyBody": "json",
        "authentication": "genericCredentialType",
        "specifyHeaders": "json",
        "genericAuthType": "httpHeaderAuth"
      },
      "credentials": {
        "httpHeaderAuth": {
          "id": "REPLICATE_API_KEY_HERE",
          "name": "Replicate API"
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "f5c82bb7-8c7b-4dda-bd7f-a82012d77295",
      "name": "💾 Save Results",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        488,
        160
      ],
      "parameters": {
        "columns": {
          "value": {
            "Post": "={{ $('🎨 Voice Refiner - OpenAI').item.json.message.content }}",
            "Image": "={{ $json.output }}",
            "Topic": "={{ $('Webhook').item.json.body.Topic }}",
            "Status": "={{ $('📊 Content Scorer').item.json.status }}",
            "AI_Score": "={{ $('📊 Content Scorer').item.json.ai_score }}"
          },
          "schema": [
            {
              "id": "Topic",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Topic",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Post_type",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Post_type",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Length",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Length",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Include_Mydra",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Include_Mydra",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Personal_Story",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Personal_Story",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Additional context",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Additional context",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Category",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Category",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Post",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Post",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Image",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Image",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "AI_Score",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "AI_Score",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Scheduled_for",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Scheduled_for",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Posted_at",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Posted_at",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "Topic"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "appendOrUpdate",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/GOOGLE_SHEETS_ID_HERE/edit#gid=0",
          "cachedResultName": "Sheet1"
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "GOOGLE_SHEETS_ID_HERE"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GOOGLE_SHEETS_OAUTH_ID_HERE",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.6
    },
    {
      "id": "afec1b86-eda6-42fd-b800-bd92663b5eb5",
      "name": "🔍 Research & Trends",
      "type": "n8n-nodes-base.perplexity",
      "position": [
        -1520,
        160
      ],
      "parameters": {
        "model": "sonar",
        "options": {},
        "messages": {
          "message": [
            {
              "content": "=Research the topic:  {{ $json.body.Topic }}\n\nAdditional context: {{ $json.body.Additional_Context }}\n\nI need FACTUAL, VERIFIABLE information only. Please:\\n\\n1. Find recent news or developments (with specific dates and sources)\\n2. Look for actual statistics or data (cite the original studies/reports)\\n3. Identify real discussions happening on platforms like Reddit, HN, Twitter\\n4. Find genuine expert opinions from credible sources\\n\\nIMPORTANT RULES:\\n- Only include information you can verify with direct links\\n- If you can't find recent information, say 'No recent verifiable information found'\\n- Don't speculate or create plausible-sounding but unverified claims\\n- Provide direct URLs when possible\\n- If statistics seem outdated or unclear, mention the limitation\\n\\nFormat your response as:\\n**VERIFIED INSIGHTS:**\\n[List only factual findings with sources]\\n\\n**CONTENT ANGLES:**\\n[Suggest how this real information could be used for LinkedIn content]\\n\\n**LIMITATIONS:**\\n[Note what information wasn't available or needs verification]\n"
            }
          ]
        },
        "requestOptions": {}
      },
      "credentials": {
        "perplexityApi": {
          "id": "PERPLEXITY_API_KEY_HERE",
          "name": "Perplexity account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "de8492e6-9fa5-4da6-90db-95a2c979ed2b",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        48,
        160
      ],
      "parameters": {
        "jsCode": "const imagePrompt = $input.first().json.message.content\n\n// Clean and escape the prompt for JSON\nconst cleanPrompt = imagePrompt\n  .replace(/\"/g, '\\\\\"')  // Escape quotes\n  .replace(/\\n/g, ' ')   // Remove line breaks\n  .replace(/\\r/g, ' ')   // Remove carriage returns\n  .trim();               // Remove extra whitespace\n\nreturn {\n  json: {\n    clean_prompt: cleanPrompt\n  }\n};\n"
      },
      "typeVersion": 2
    },
    {
      "id": "1ff1849b-2ef7-488f-9ba5-610f8733cab8",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -1740,
        160
      ],
      "webhookId": "WEBHOOK_ID_HERE",
      "parameters": {
        "path": "WEBHOOK_ID_HERE",
        "options": {},
        "httpMethod": "POST"
      },
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "🎨 Image Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "🔍 Research & Trends",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Content Scorer": {
      "main": [
        [
          {
            "node": "🖼️ Image Prompt Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🎨 Image Generator": {
      "main": [
        [
          {
            "node": "💾 Save Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔍 Research & Trends": {
      "main": [
        [
          {
            "node": "✍️ Content Creator - OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🎨 Voice Refiner - OpenAI": {
      "main": [
        [
          {
            "node": "📊 Content Scorer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🖼️ Image Prompt Generator": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "✍️ Content Creator - OpenAI": {
      "main": [
        [
          {
            "node": "🎨 Voice Refiner - OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}