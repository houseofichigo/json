{
  "name": "Generate Avatar Video",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/media",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $('Save Final Video').item.json['Final video'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2240,
        1740
      ],
      "id": "ae2c58c9-e6a8-4532-ad6a-42f6569c37c4",
      "name": "Upload to Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "UIUS77Y5rr59UbRh",
          "name": "Blotato"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"target\": {\n      \"targetType\": \"instagram\"\n    },\n    \"content\": {\n      \"text\": {{ $('Prepare for Publish').item.json.final_text_long.toJsonString() }},\n      \"platform\": \"instagram\",\n      \"mediaUrls\": [\"{{ $json.url }}\"]\n    },\n    \"accountId\": \"{{ $('Prepare for Publish').item.json.instagram_id }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2480,
        940
      ],
      "id": "9c2230ce-4482-422c-9b0f-84853dc9d07b",
      "name": "[Instagram] Publish via Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "UIUS77Y5rr59UbRh",
          "name": "Blotato"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"target\": {\n      \"targetType\": \"facebook\",\n      \"pageId\": \"{{ $('Prepare for Publish').item.json.facebook_page_id }}\"\n    },\n    \"content\": {\n      \"text\": {{ $('Prepare for Publish').item.json.final_text_long.toJsonString() }},\n      \"platform\": \"facebook\",\n      \"mediaUrls\": [\"{{ $json.url }}\"]\n    },\n    \"accountId\": \"{{ $('Prepare for Publish').item.json.facebook_id }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2480,
        1280
      ],
      "id": "8d363cc4-818f-4828-a51d-9a91cbf31ded",
      "name": "[Facebook] Publish via Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MbiGeW2Mt4WGrqIp",
          "name": "Blotato"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"target\": {\n      \"targetType\": \"linkedin\"\n    },\n    \"content\": {\n      \"text\": {{ $('Prepare for Publish').item.json.final_text_long.toJsonString() }},\n      \"platform\": \"linkedin\",\n      \"mediaUrls\": [\"{{ $json.url }}\"]\n    },\n    \"accountId\": \"{{ $('Prepare for Publish').item.json.linkedin_id }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2480,
        1740
      ],
      "id": "1a2657d2-dd46-493b-a37f-38d9d4595746",
      "name": "[Linkedin] Publish via Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MbiGeW2Mt4WGrqIp",
          "name": "Blotato"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"target\": {\n      \"targetType\": \"tiktok\",\n      \"isYourBrand\": false,\n      \"disabledDuet\": false,\n      \"privacyLevel\": \"PUBLIC_TO_EVERYONE\",\n      \"isAiGenerated\": true,\n      \"disabledStitch\": false,\n      \"disabledComments\": false,\n      \"isBrandedContent\": false\n    },\n    \"content\": {\n      \"text\": {{ $('Prepare for Publish').item.json.final_text_long.toJsonString() }},\n      \"platform\": \"tiktok\",\n      \"mediaUrls\": [\"{{ $json.url }}\"]\n    },\n    \"accountId\": \"{{ $('Prepare for Publish').item.json.tiktok_id }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2480,
        2140
      ],
      "id": "bfc6d684-b35d-4564-9839-c0847fcd97e4",
      "name": "[Tiktok] Publish via Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MbiGeW2Mt4WGrqIp",
          "name": "Blotato"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/media",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $('Get Images').first().json.data.output.image_url }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2480,
        2380
      ],
      "id": "4fbc838a-fdce-4fbf-8a3d-209a44ec0665",
      "name": "Upload to Blotato - Image",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MbiGeW2Mt4WGrqIp",
          "name": "Blotato"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"target\": {\n      \"targetType\": \"pinterest\",\n      \"boardId\": \"{{ $('Prepare for Publish').item.json.pinterest_board_id }}\",\n      \"link\": \"https://www.instagram.com/evgen_orel_usa\"\n    },\n    \"content\": {\n      \"text\": {{ $('Prepare for Publish').item.json.final_text_short.toJsonString() }},,\n      \"platform\": \"pinterest\",\n      \"mediaUrls\": [\"{{ $json.url }}\"]\n    },\n    \"accountId\": \"{{ $('Prepare for Publish').item.json.pinterest_id }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2880,
        2380
      ],
      "id": "498d7d76-1e01-4bd8-9786-ecf05c464063",
      "name": "[Pinterest] Publish via Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MbiGeW2Mt4WGrqIp",
          "name": "Blotato"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"target\": {\n      \"targetType\": \"youtube\",\n      \"title\": \"{{ $('Prepare for Publish').item.json.final_text_short.slice(0, 60) }}...\",\n      \"privacyStatus\": \"public\",\n      \"shouldNotifySubscribers\": true\n    },\n    \"content\": {\n      \"text\": {{ $('Prepare for Publish').item.json.final_text_long.toJsonString() }},\n      \"platform\": \"youtube\",\n      \"mediaUrls\": [\"{{ $json.url }}\"]\n    },\n    \"accountId\": \"{{ $('Prepare for Publish').item.json.youtube_id }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2840,
        940
      ],
      "id": "6216326c-d3ab-40de-bd6d-be56bf1b491e",
      "name": "[Youtube] Publish via Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MbiGeW2Mt4WGrqIp",
          "name": "Blotato"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"target\": {\n      \"targetType\": \"threads\"\n    },\n    \"content\": {\n      \"text\": {{ $('Prepare for Publish').item.json.final_text_short.toJsonString() }},\n      \"platform\": \"threads\",\n      \"mediaUrls\": [\"{{ $json.url }}\"]\n    },\n    \"accountId\": \"{{ $('Prepare for Publish').item.json.threads_id }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2840,
        1280
      ],
      "id": "fbaee1f2-8a6e-4a5a-b883-40a47d152669",
      "name": "[Threads] Publish via Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MbiGeW2Mt4WGrqIp",
          "name": "Blotato"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"target\": {\n      \"targetType\": \"twitter\"\n    },\n    \"content\": {\n      \"text\": {{ $('Prepare for Publish').item.json.final_text_short.toJsonString() }},\n      \"platform\": \"twitter\",\n      \"mediaUrls\": [\"{{ $json.url }}\"]\n    },\n    \"accountId\": \"{{ $('Prepare for Publish').item.json.twitter_id }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2840,
        1740
      ],
      "id": "37354329-2503-4ae1-a083-f15a44469f55",
      "name": "[Twitter] Publish via Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MbiGeW2Mt4WGrqIp",
          "name": "Blotato"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://backend.blotato.com/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"post\": {\n    \"target\": {\n      \"targetType\": \"bluesky\"\n    },\n    \"content\": {\n      \"text\": {{ $('Prepare for Publish').item.json.final_text_short.toJsonString() }},\n      \"platform\": \"bluesky\",\n      \"mediaUrls\": []\n    },\n    \"accountId\": \"{{ $('Prepare for Publish').item.json.bluesky_id }}\"\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2840,
        2140
      ],
      "id": "4d75269e-16cd-4a4b-9535-2e635534dde0",
      "name": "[Bluesky] Publish via Blotato",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MbiGeW2Mt4WGrqIp",
          "name": "Blotato"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -40,
        880
      ],
      "id": "caf4aa58-a758-48bd-b1a5-f77ad48b22b7",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Current time: {{ $now }}\n\n# INSTRUCTIONS:\n\nTo complete this task, you MUST use the \"Fetch news\" tool to get the latest AI-related news.\nThen, you MUST use the \"Fetch article\" tool to get the full article content.\n\n1. Pick the top 10 AI or LLM-related stories from Fetch news in the last 24 hours.\n\n2. Exclude from the selection news with story_id: {{ $json.story_ids }}\n\n3. Pick the top story that is most likely to go viral on social media.\n\n4. Pick a Fetch article and comments.\n\n5. Write the story_id and number of comments of the selected news item in the table, use the \"write_table\" tool.\n\n6. Create a 30-second script for the AI ​​avatar's video monologue, following these guidelines:\n\n- The script must be between **60 and 70 words long**. \n- It must be fully readable out loud within 30 seconds at a normal pace.\nDo not stop mid-sentence. The final sentence MUST be: Click \"Subscribe\" to stay ahead in AI!\n- Include plenty of details and statistics from the article.\n- Use a 6th grade reading level.\n- Balanced perspective.\n- If the news is about a specific object or subject, be sure to mention it in the news.\n\n7. Update the first 2 sentences of the script to use sensational viral hooks that will grab the viewer's attention and pique their curiosity. The third sentence should start diving into the details of the article.\n\n8. Replace the last sentence with: \"Click \"Subscribe\" to stay ahead in AI!\"\n\n9. Do not leave unfinished text, it should end with a specific message with an offer to subscribe.\n\n# USE TOOLS:\n\n- Fetch news: Returns a list of the latest AI and LLM news headlines from the last 24 hours.\n- Fetch article: Fetches the full article text based on a selected headline.\n- write_table: Use this tool to write the ID of the selected news item and the number of comments it has to the table.\n\n# FINAL REMINDER:\n\n⚠️ Do not cut off or leave the last sentence incomplete under any circumstances.\n❗If no data is available from the tools, you MUST return the message: \"No news found\"\n❗Do not hallucinate or invent any content under any circumstances.\n⚠️ DO NOT add any introductions, explanations, or labels like \"Here is the script\", \"Let's begin\", or \"This is the result\".\n\nThe output must start **directly** with the script content.",
        "options": {
          "returnIntermediateSteps": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -60,
        1120
      ],
      "id": "e4100228-b9c3-44dc-91ae-ec5f5b9061d3",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "o3-mini",
          "mode": "list",
          "cachedResultName": "o3-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -60,
        1360
      ],
      "id": "151fd34d-35e6-47ce-a919-58aedaa4bb83",
      "name": "Write Script",
      "credentials": {
        "openAiApi": {
          "id": "WjgIa4M6kVoaPytE",
          "name": "OpenAi n8n"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"avatar_id\": \"af39d00fcbab41bc9394d695fe938a5f\",\n  \"voice_id\": \"e3c9eaba499c495a826ba861cea832f2\",\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -100,
        1740
      ],
      "id": "6cb81684-a0eb-4b6a-87aa-074db63ea594",
      "name": "Setup Heygen"
    },
    {
      "parameters": {
        "url": "https://api.heygen.com/v1/video_status.get",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "video_id",
              "value": "={{ $('Create Avatar Video').item.json.data.video_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        1740
      ],
      "id": "f08edf4a-adac-48a3-ac5f-863a0270fd57",
      "name": "Get Avatar Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "5yb51I7GZTTs2XUZ",
          "name": "Heygen"
        }
      }
    },
    {
      "parameters": {
        "content": "# Research Daily News and Write Script",
        "height": 700,
        "width": 940,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        780
      ],
      "id": "11244ca7-7b38-48d9-983f-2f8af09f95f7",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Create AI Avatar Video\n\n- Heygen API plan (paid) is required; the free plan is insufficient.\n- if you have a long script, you may need to increase the WAIT time.\n- you can use Elevenlabs voice by integrating Elevenlabs from within Heygen app.",
        "height": 620,
        "width": 940,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        1500
      ],
      "id": "f0579ef6-2d9a-4c25-b151-178e4218abe4",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Publish to Social Media",
        "height": 1820,
        "width": 1140,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1980,
        780
      ],
      "id": "f230154b-2eb1-443e-8f82-e0588bec4f14",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"instagram_id\": \"3404\",\n  \"youtube_id\": \"2348\",\n  \"tiktok_id\": \"4167\",\n  \"facebook_id\": \"\",\n  \"facebook_page_id\": \"\",\n  \"threads_id\": \"1362\",\n  \"twitter_id\": \"\",\n  \"linkedin_id\": \"\",\n  \"pinterest_id\": \"942\",\n  \"pinterest_board_id\": \"\",\n  \"bluesky_id\": \"\",\n  \"final_text_long\": {{ $('Write Long Caption').first().json.message.content.toJsonString() }},\n  \"final_text_short\": {{ $('Write Short Caption').first().json.message.content.toJsonString() }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2060,
        1740
      ],
      "id": "3f74a7bf-b111-490c-a518-1b48896936ed",
      "name": "Prepare for Publish"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=# EXAMPLE\n\n<example>\nMany people have recently asked me about ask engine optimization, which is all about optimizing your website and existing content, so it can be pulled into ChatGPT and other generative AI tools. Consider that generative AI tools tend to be more conversational in nature and have a Q&A type format, so search engines will want to pull in snippets that concisely answer a user’s question.- what is ask engine optimization in the age of AI?- How does traditional SEO compare to ask engine optimization today?- top tips and tricks to get started with ask engine optimization?\n\n#ai #askengineoptimization #chatgpts #seo #aitools #digitalmarketing\n</example>\n\n# CONTEXT\n\nInfer the topic from the sources provided.\n\n# WRITING STYLE\n\nHere’s how you always write:\n\n<writing_style>\n\n- Your writing style is spartan and informative.\n- Use clear, simple language.\n- Employ short, impactful sentences.\n- Use active voice; avoid passive voice.\n- Focus on practical, actionable insights.\n- Incorporate data or statistics to support claims when possible.\n- Use \"\"\"\"\"\"\"\"you\"\"\"\"\"\"\"\" and \"\"\"\"\"\"\"\"your\"\"\"\"\"\"\"\" to directly address the reader.\n- Avoid metaphors and clichés.\n- Avoid generalizations.\n- Do not include common setup language in any sentence, including: in conclusion, in closing, etc.\n- Do not output warnings or notes—just the output requested.\n- Do not use hashtags.\n- Do not use semicolons.\n- Do not use emojis.\n- Do not use asterisks.\n- Do not use adjectives and adverbs.\n- Do NOT use these words:\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"can, may, just, that, very, really, literally, actually, certainly, probably, basically, could, maybe, delve, embark, enlightening, esteemed, shed light, craft, crafting, imagine, realm, game-changer, unlock, discover, skyrocket, abyss, you're not alone, in a world where, revolutionize, disruptive, utilize, utilizing, dive deep, tapestry, illuminate, unveil, pivotal, enrich, intricate, elucidate, hence, furthermore, realm, however, harness, exciting, groundbreaking, cutting-edge, remarkable, it. remains to be seen, glimpse into, navigating, landscape, stark, testament, in summary, in conclusion, moreover, boost, bustling, opened up, powerful, inquiries, ever-evolving\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n</writing_style>\n\n# PLANNING\n\nYour goal is to write a 50-word video caption based on the provided source.\n\n1. Analyze the provided sources thoroughly.\n2. Study the <example> post carefully. You will be asked to replicate their:\n    - Overall structure.\n    - Tone and voice.\n    - Formatting (including line breaks and spacing).\n    - Length (aim for a similarly detailed post).\n    - Absence of emojis.\n    - Use of hashtags.\n    - Emotional resonance.\n\n# OUTPUT\nFollow the GUIDELINES below to write the post. Use your analysis from step 1 and step 2. Use the provided sources as the foundation for your post, expanding on it significantly while maintaining the style and structure of the examples provided from step 2. You MUST use information from the provided sources. Make sure you adhere to your <writing_style>.\n\n<guidelines>\nThe description should be structured as follows:\n1. Start with 1 paragraph summarizing the source\n2. Newline, followed by 3 bullet points of questions that a viewer might ask on a search engine about the source\n3. Newline, followed by these hashtags: #ai #artificialintelligence #ainews #sabrinaramonov #aiavatar\n</guidelines>\n\nTake a deep breath and take it step-by-step!\n\n# INPUT\nUse the following information sources:\n<sources>\n{{ $json.output }}\n</sources>"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        240,
        1120
      ],
      "id": "728e6765-13bf-4890-b92f-9995bfab1151",
      "name": "Write Long Caption",
      "credentials": {
        "openAiApi": {
          "id": "WjgIa4M6kVoaPytE",
          "name": "OpenAi n8n"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=Write a spartan 2-sentence caption summarizing the video content, use 6th grade language, balanced neutral perspective, no emojis:\n\n<content>\n{{ $json.message.content }}\n</content>"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        540,
        1120
      ],
      "id": "859b208f-c4fc-4be0-ad0c-062196a84929",
      "name": "Write Short Caption",
      "credentials": {
        "openAiApi": {
          "id": "WjgIa4M6kVoaPytE",
          "name": "OpenAi n8n"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.heygen.com/v2/video/generate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_inputs\": [\n    {\n      \"character\": {\n        \"type\": \"avatar\",\n        \"avatar_id\": \"{{ $json.avatar_id }}\",\n        \"avatar_style\": \"normal\",\n        \"scale\": 1\n      },\n      \"voice\": {\n        \"type\": \"text\",\n        \"input_text\": {{ JSON.stringify($('AI Agent').first().json.output) }},\n        \"voice_id\": \"{{ $json.voice_id }}\",\n        \"speed\": 1.1,\n        \"pitch\": 50,\n        \"emotion\": \"Excited\"\n      }\n    }\n  ],\n  \"dimension\": {\n    \"width\": 720,\n    \"height\": 1280\n  },\n  \"caption\": false,\n  \"title\": \"{{ $('AI Agent').first().json.output.slice(0, 40) }}...\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        80,
        1740
      ],
      "id": "7d27bd19-78a7-4ae3-af2b-d18723da3f6a",
      "name": "Create Avatar Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "5yb51I7GZTTs2XUZ",
          "name": "Heygen"
        }
      }
    },
    {
      "parameters": {
        "content": "## Fill this data",
        "height": 320,
        "width": 180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2020,
        1560
      ],
      "id": "cacd6d86-a688-4544-927d-98f62db33bb3",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# Create image prompts ang generate",
        "height": 700,
        "width": 1020,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        780
      ],
      "id": "06f0ddd4-c228-4dd4-861f-e149694a7181",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        960,
        1140
      ],
      "id": "15eeb6c3-b261-436f-ad04-69a9072cee80",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "WjgIa4M6kVoaPytE",
          "name": "OpenAi n8n"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"prompt1\": \"text\",\n  \"prompt2\": \"text\",\n  \"prompt3\": \"text\",\n  \"prompt4\": \"text\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1180,
        1140
      ],
      "id": "047e775a-5604-4df2-bd1c-00c7383f09a6",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('AI Agent').first().json.output }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "🧠 Role:\n\nYou are an AI agent specialized in creating highly realistic, documentary-style image prompts for GPT-based image generation. Your mission is to generate four concise prompts based on a news article that accurately convey the core message and evoke one or more strong emotional responses.\n\n📌 Instructions:\n\nAnalyze the given headline or summary to identify key events, characters, settings, and emotional drivers.\n\nGenerate 4 distinct prompts following this structure:\n\nContext (brief setting or situation)\n\nScene Description (clear and specific image content)\n\nEmotion (choose one: Surprise/Shock, Fear, Anger/Outrage, Compassion/Pity, Admiration/Inspiration, Identification/Belonging, Greed/Benefit)\n\nThe generated images should:\n\nBe photo-realistic and highly detailed\n\nResemble authentic moments captured in documentary photography\n\nAppear as if viewed by an external observer, not staged or artificially lit\n\nAvoid surrealism, abstraction, or stylized rendering\n\n📤 Output Format (for each prompt):\n\nPrompt #X: [Context] — [Scene Description] — Emotion: [Emotion]\n\n🧪 Example Inputs & Outputs:\n\nInput: \"Wildfires Rage Across California, Displacing Thousands\"\n\nPrompt 1: A smoky hilltop overlooking a blazing forest — A lone firefighter silhouetted against the flames sprays water from a hose — Emotion: Admiration/Inspiration\n\nPrompt 2: Inside a crowded emergency shelter — Families with children sleeping on cots, surrounded by bags and supplies — Emotion: Compassion/Pity\n\nPrompt 3: Aerial view of a burned residential area — Charred foundations, collapsed roofs, and empty streets — Emotion: Fear\n\nPrompt 4: A local community center during a donation drive — Volunteers handing out essentials to evacuees — Emotion: Identification/Belonging\n\nInput: \"Breakthrough in Cancer Research Offers New Hope\"\n\nPrompt 1: Inside a medical lab — Scientists in lab coats huddled around a microscope and data screens, smiling with hope — Emotion: Admiration/Inspiration\n\nPrompt 2: Hospital room — A cancer patient receiving treatment with supportive family members holding hands — Emotion: Compassion/Pity\n\nPrompt 3: Press conference hall — Researchers presenting slides while journalists capture every moment — Emotion: Surprise/Shock\n\nPrompt 4: Public park during a fundraiser — Community members walking with banners for cancer awareness — Emotion: Identification/Belonging"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1000,
        880
      ],
      "id": "8d507dab-e1ae-4208-ae06-141a2ce77a92",
      "name": "Generate Image Prompts"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.piapi.ai/api/v1/task",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"Qubico/flux1-dev\",\n    \"task_type\": \"txt2img\",\n    \"input\": {\n        \"prompt\": \"{{ $json.output }}. Style: photo-realistic, natural lighting, documentary style, no illustrations, no cartoon elements, no stylization\",\n        \"width\": 540, \n        \"height\": 960\n    } \n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1680,
        880
      ],
      "id": "4318dccd-0513-45c1-bfb2-35fe2a5f8376",
      "name": "Generate Image",
      "executeOnce": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "YvRFR3AaRj0NW5lj",
          "name": "PiAPI"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1520,
        880
      ],
      "id": "d91aeb27-2832-446e-a36e-7b0bb7dc2139",
      "name": "Split Prompts"
    },
    {
      "parameters": {
        "url": "=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1700,
        1120
      ],
      "id": "43b37aa7-d392-48c1-b9f1-4202277cfaa0",
      "name": "Get Images",
      "credentials": {
        "httpHeaderAuth": {
          "id": "YvRFR3AaRj0NW5lj",
          "name": "PiAPI"
        }
      }
    },
    {
      "parameters": {
        "amount": 90
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1520,
        1120
      ],
      "id": "4e6df73e-4768-48ff-b801-c9d4ff0b22e6",
      "name": "Wait 90 sek",
      "webhookId": "4fa5f666-5079-4963-830a-1002d6e9b490"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "data.output.image_url",
              "renameField": true,
              "outputFieldName": "image_url"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1520,
        1320
      ],
      "id": "3385c5d6-2f59-4128-8ec1-6e6dbdbb6577",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "content": "# Combine images and avatar into final video",
        "height": 620,
        "width": 1020,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        1500
      ],
      "id": "7d3e5a63-2dd9-4a28-8fcd-fd419b8193fc",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.creatomate.com/v1/renders",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_id\": \"f721ed8b-3d92-4bb3-bc66-4b4c8bb3dd27\",\n  \"modifications\": {\n    \"Audio.source\": \"https://drive.google.com/file/d/1T4C7eHCBhJSlVDVoWzTvsRRsbhZrk1lX/view?usp=download\",\n    \"Video-1.source\": \"{{ $('Aggregate').first().json.image_url[0] }}\",\n    \"Video-2.source\": \"{{ $('Aggregate').first().json.image_url[1] }}\",\n    \"Video-3.source\": \"{{ $('Aggregate').first().json.image_url[2] }}\",\n    \"Video-4.source\": \"{{ $('Aggregate').first().json.image_url[3] }}\",\n \"Avatar.source\": \"{{ $json.data.video_url }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1100,
        1740
      ],
      "id": "a535d7c7-ec04-490f-8dc8-df1a6d715262",
      "name": "Render Video",
      "credentials": {
        "httpHeaderAuth": {
          "id": "iXAsYY2LGpkriNKT",
          "name": "Creatomate"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU",
          "mode": "list",
          "cachedResultName": "news generate",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Full text": "={{ $('AI Agent').first().json.output }}",
            "Short caption": "={{ $('Write Short Caption').first().json.message.content }}",
            "Long caption": "={{ $('Write Long Caption').first().json.message.content }}",
            "Image promps": "={{ $('Generate Image Prompts').item.json.output.prompt1 }} | {{ $('Generate Image Prompts').item.json.output.prompt2 }} | {{ $('Generate Image Prompts').item.json.output.prompt3 }} | {{ $('Generate Image Prompts').item.json.output.prompt4 }}",
            "Images": "={{ $json.image_url.join(\", \") }}",
            "Status": "Processing",
            "story_id": "={{ $('AI Agent').first().json.intermediateSteps[3].action.messageLog[0].kwargs.tool_calls[0].args.story_id }}"
          },
          "matchingColumns": [
            "story_id"
          ],
          "schema": [
            {
              "id": "Time",
              "displayName": "Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "story_id",
              "displayName": "story_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Full text",
              "displayName": "Full text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Short caption",
              "displayName": "Short caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Long caption",
              "displayName": "Long caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Image promps",
              "displayName": "Image promps",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Images",
              "displayName": "Images",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Avatar Video",
              "displayName": "Avatar Video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Final video",
              "displayName": "Final video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1680,
        1320
      ],
      "id": "b812482a-935c-460c-b625-2be72da8acd4",
      "name": "Save Prepared Data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "9rj2VjbYgY0lGdyW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "amount": 140
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1300,
        1740
      ],
      "id": "467a708f-0fc6-45fc-86db-319fcb96aa69",
      "name": "Wait 140 Seconds",
      "webhookId": "32dfbb57-d930-4807-922e-78fa7fb72e78"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.heygen.com/v2/video/generate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_inputs\": [\n    {\n      \"character\": {\n        \"type\": \"avatar\",\n        \"avatar_id\": \"{{ $json.avatar_id }}\",\n        \"avatar_style\": \"normal\",\n        \"offset\": {\n          \"x\": 0.3,\n          \"y\": 0.32\n        },\n        \"scale\": 0.33,\n        \"matting\": true\n      },\n      \"voice\": {\n        \"type\": \"text\",\n        \"input_text\": \"{{ $('AI Agent').item.json.output }}\",\n        \"voice_id\": \"{{ $json.voice_id }}\",\n        \"speed\": 1.1,\n        \"pitch\": 50,\n        \"emotion\": \"Excited\"\n      },\n      \"background\": {\n        \"type\": \"video\",\n        \"url\": \"{{ $json.background_video_url }}\",\n        \"play_style\": \"loop\",\n        \"fit\": \"cover\"\n      }\n    }\n  ],\n  \"dimension\": {\n    \"width\": 720,\n    \"height\": 1280\n  },\n  \"subtitles\": {\n    \"preset_name\": \"bold\"\n  },\n  \"caption\": false,\n  \"title\": \"{{ $('AI Agent').item.json.output.slice(0, 40) }}...\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        80,
        1940
      ],
      "id": "5a11fcb3-e220-428f-a7a8-3909c57ad3ad",
      "name": "Create Avatar Video With Background",
      "credentials": {
        "httpHeaderAuth": {
          "id": "5yb51I7GZTTs2XUZ",
          "name": "Heygen"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU",
          "mode": "list",
          "cachedResultName": "news generate",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "videos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "Video ready",
            "Final video": "={{ $('Render Video').item.json.url }}",
            "Avatar Video": "={{ $('Get Avatar Video').first().json.data.video_url }}",
            "story_id": "={{ $('Save Prepared Data').first().json.story_id }}"
          },
          "matchingColumns": [
            "story_id"
          ],
          "schema": [
            {
              "id": "Time",
              "displayName": "Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "story_id",
              "displayName": "story_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Full text",
              "displayName": "Full text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Short caption",
              "displayName": "Short caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Long caption",
              "displayName": "Long caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Image promps",
              "displayName": "Image promps",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Images",
              "displayName": "Images",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Avatar Video",
              "displayName": "Avatar Video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Final video",
              "displayName": "Final video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1520,
        1740
      ],
      "id": "d7cdd036-1979-46b1-9fbc-6e6b9d219676",
      "name": "Save Final Video",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "9rj2VjbYgY0lGdyW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        260,
        1740
      ],
      "id": "838ce3d2-513f-4d3f-9b43-4d0a62f85814",
      "name": "Wait 5 min",
      "webhookId": "d9404622-0a06-4a65-959e-badd4fd87465",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "content": "## 🛠️ Instructions\n### [LinkedIn](https://www.linkedin.com/in/evgeniiorel/) | [Telegram](https://t.me/Evgenfalcon) | [Threads](https://www.threads.com/@evgen_orel_usa)  | [Youtube](https://www.youtube.com/@eugene-ai-agent) | [Instagram](https://www.instagram.com/evgen_orel_usa/)\n\n1. **Copy** this [Google Sheet Template](https://docs.google.com/spreadsheets/d/1UzsQy2KsL3zsSal1YOUbiKlftaKINSxFjsb5xQf1GTY/edit?usp=sharing) and connect it in all Google Sheets nodes.\n\n2. Create a [PiAPi](https://piapi.ai/workspace?via=evgen) account and specify your API key.\n\n3. Create a [Heygen](https://heygen.com) account and create your own avatar or use one of the existing avatars.\n\n4. Create a [Creatomate](https://creatomate.com/) account and combine the template ID and account ID.\n\n4.1 Use [this template](https://docs.google.com/document/d/1CXNIunEUesrVxmaThEt0KozXNC3W1DQG1WL7HNlfCxI/edit?usp=sharing) for Creatomate\n\n5. Connect a [Blotato](https://blotato.com/?ref=yavhen) account and get your API key to connect publication to Instagram, TikTok, and YouTube with accounts id.",
        "height": 440,
        "width": 540,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -700,
        780
      ],
      "typeVersion": 1,
      "id": "d52aaa0b-3d55-4627-8e9b-272856f75215",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU",
          "mode": "list",
          "cachedResultName": "news generate",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "videos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Status": "Done",
            "story_id": "={{ $('Save Prepared Data').first().json.story_id }}"
          },
          "matchingColumns": [
            "story_id"
          ],
          "schema": [
            {
              "id": "Time",
              "displayName": "Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "story_id",
              "displayName": "story_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Full text",
              "displayName": "Full text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Short caption",
              "displayName": "Short caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Long caption",
              "displayName": "Long caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Image promps",
              "displayName": "Image promps",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Images",
              "displayName": "Images",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Avatar Video",
              "displayName": "Avatar Video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Final video",
              "displayName": "Final video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2840,
        1560
      ],
      "id": "3b206dba-6dcc-4bee-b44a-b5af06ce2c10",
      "name": "Status Done",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "9rj2VjbYgY0lGdyW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "use to get a list of all the latest news",
        "resource": "all",
        "additionalFields": {
          "keyword": "AI",
          "tags": [
            "front_page"
          ]
        }
      },
      "type": "n8n-nodes-base.hackerNewsTool",
      "typeVersion": 1,
      "position": [
        60,
        1360
      ],
      "id": "d944c943-6fd9-4a0e-9ff1-e4708ad71694",
      "name": "Fetch news"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "use to get the full text of the selected article from the list",
        "articleId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Article_ID', ``, 'string') }}",
        "additionalFields": {
          "includeComments": true
        }
      },
      "type": "n8n-nodes-base.hackerNewsTool",
      "typeVersion": 1,
      "position": [
        300,
        1360
      ],
      "id": "3267fb8a-31ad-44e1-a7ea-85e5920fe623",
      "name": "Fetch article"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to write the ID of the selected news item and the number of comments it has to the table.",
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU",
          "mode": "list",
          "cachedResultName": "news generate",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "videos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Time": "={{ $now.format('yyyy-MM-dd H:ii:ss') }}",
            "story_id": "={{ $fromAI('story_id', \"story_id from fetched news\") }}",
            "comments": "={{ $fromAI('comments', \"comments from fetched news\") }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Time",
              "displayName": "Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "story_id",
              "displayName": "story_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "comments",
              "displayName": "comments",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Full text",
              "displayName": "Full text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Short caption",
              "displayName": "Short caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Long caption",
              "displayName": "Long caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Image promps",
              "displayName": "Image promps",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Images",
              "displayName": "Images",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Avatar Video",
              "displayName": "Avatar Video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Final video",
              "displayName": "Final video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        180,
        1360
      ],
      "id": "5255675f-e349-4866-950f-a423a4c25668",
      "name": "write_table",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "9rj2VjbYgY0lGdyW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU",
          "mode": "list",
          "cachedResultName": "news generate",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "videos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RGj6FH2Ku36UJOl93IrcwZZolMP644lU8RBIlhpOQqU/edit#gid=0"
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        120,
        880
      ],
      "id": "dd58a5db-8a9b-4a6c-9619-daffa17f5849",
      "name": "Get all news",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "9rj2VjbYgY0lGdyW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "story_id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        300,
        880
      ],
      "id": "a7a4ba8c-987c-41d1-afae-e616fd316b32",
      "name": "Aggregate story_id"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "80e69acf-87b2-4125-8465-f18cb1c9f5bb",
              "name": "story_ids",
              "value": "={{ $json.story_id.filter(id => id && id.toString().trim() !== \"\").join(\", \") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        480,
        880
      ],
      "id": "63f7890c-4825-4836-9e3f-a9f70a8e229d",
      "name": "Set to string"
    }
  ],
  "pinData": {
    "Upload to Blotato - Image": [
      {
        "json": {
          "url": "https://database.blotato.io/storage/v1/object/public/public_media/573243af-ebfc-44f3-acad-be18d981f998/fc78fe80-6367-448f-bf37-fb9e9503d6d3.png"
        }
      }
    ],
    "Generate Image": [
      {
        "json": {
          "code": 200,
          "data": {
            "task_id": "394e95c7-3ccb-4e0e-8008-002abce8cac8",
            "model": "Qubico/flux1-dev",
            "task_type": "txt2img",
            "status": "pending",
            "config": {
              "service_mode": "",
              "webhook_config": {
                "endpoint": "",
                "secret": ""
              }
            },
            "input": {
              "prompt": "Inside a high-tech lab — Engineers intently studying multiple screens displaying AI algorithm data, eyes wide with excitement — Emotion: Surprise/Shock. Style: photo-realistic, natural lighting, documentary style, no illustrations, no cartoon elements, no stylization",
              "negative_prompt": "",
              "image": "",
              "width": 540,
              "height": 960,
              "guidance_scale": 0,
              "denoise": 0,
              "seed": 0,
              "steps": 0,
              "batch_size": 0,
              "scale": 0,
              "return_preprocessed_image": false,
              "lora_settings": null,
              "custom_settings": null
            },
            "output": null,
            "meta": {
              "created_at": "2025-06-11T20:33:14.330997349Z",
              "started_at": "0001-01-01T00:00:00Z",
              "ended_at": "0001-01-01T00:00:00Z",
              "usage": {
                "type": "llm",
                "frozen": 0,
                "consume": 150000
              },
              "is_using_private_pool": false
            },
            "detail": null,
            "logs": [],
            "error": {
              "code": 0,
              "raw_message": "",
              "message": "",
              "detail": null
            }
          },
          "message": "success"
        }
      },
      {
        "json": {
          "code": 200,
          "data": {
            "task_id": "af167eba-35a0-48d3-9e7a-3cc35d3a2828",
            "model": "Qubico/flux1-dev",
            "task_type": "txt2img",
            "status": "pending",
            "config": {
              "service_mode": "",
              "webhook_config": {
                "endpoint": "",
                "secret": ""
              }
            },
            "input": {
              "prompt": "Modern office space — A group of diverse tech professionals gathered around a computer, discussing and pointing at AI performance charts — Emotion: Admiration/Inspiration. Style: photo-realistic, natural lighting, documentary style, no illustrations, no cartoon elements, no stylization",
              "negative_prompt": "",
              "image": "",
              "width": 540,
              "height": 960,
              "guidance_scale": 0,
              "denoise": 0,
              "seed": 0,
              "steps": 0,
              "batch_size": 0,
              "scale": 0,
              "return_preprocessed_image": false,
              "lora_settings": null,
              "custom_settings": null
            },
            "output": null,
            "meta": {
              "created_at": "2025-06-11T20:33:14.348407347Z",
              "started_at": "0001-01-01T00:00:00Z",
              "ended_at": "0001-01-01T00:00:00Z",
              "usage": {
                "type": "llm",
                "frozen": 0,
                "consume": 150000
              },
              "is_using_private_pool": false
            },
            "detail": null,
            "logs": [],
            "error": {
              "code": 0,
              "raw_message": "",
              "message": "",
              "detail": null
            }
          },
          "message": "success"
        }
      },
      {
        "json": {
          "code": 200,
          "data": {
            "task_id": "8928e149-dfde-4cf3-ae1f-5c8ea03a05ed",
            "model": "Qubico/flux1-dev",
            "task_type": "txt2img",
            "status": "pending",
            "config": {
              "service_mode": "",
              "webhook_config": {
                "endpoint": "",
                "secret": ""
              }
            },
            "input": {
              "prompt": "Futuristic conference center — Attendees engaged in animated discussions, holding brochures about the new AI model, expressions showing skepticism and curiosity — Emotion: Identification/Belonging. Style: photo-realistic, natural lighting, documentary style, no illustrations, no cartoon elements, no stylization",
              "negative_prompt": "",
              "image": "",
              "width": 540,
              "height": 960,
              "guidance_scale": 0,
              "denoise": 0,
              "seed": 0,
              "steps": 0,
              "batch_size": 0,
              "scale": 0,
              "return_preprocessed_image": false,
              "lora_settings": null,
              "custom_settings": null
            },
            "output": null,
            "meta": {
              "created_at": "2025-06-11T20:33:14.351725078Z",
              "started_at": "0001-01-01T00:00:00Z",
              "ended_at": "0001-01-01T00:00:00Z",
              "usage": {
                "type": "llm",
                "frozen": 0,
                "consume": 150000
              },
              "is_using_private_pool": false
            },
            "detail": null,
            "logs": [],
            "error": {
              "code": 0,
              "raw_message": "",
              "message": "",
              "detail": null
            }
          },
          "message": "success"
        }
      },
      {
        "json": {
          "code": 200,
          "data": {
            "task_id": "c0787607-0378-459d-a432-2239cd3f8bc2",
            "model": "Qubico/flux1-dev",
            "task_type": "txt2img",
            "status": "pending",
            "config": {
              "service_mode": "",
              "webhook_config": {
                "endpoint": "",
                "secret": ""
              }
            },
            "input": {
              "prompt": "Tech event exhibition hall — A large banner showcasing the AI model with visitors interacting with demo stations, some looking impressed while others seem doubtful — Emotion: Anger/Outrage. Style: photo-realistic, natural lighting, documentary style, no illustrations, no cartoon elements, no stylization",
              "negative_prompt": "",
              "image": "",
              "width": 540,
              "height": 960,
              "guidance_scale": 0,
              "denoise": 0,
              "seed": 0,
              "steps": 0,
              "batch_size": 0,
              "scale": 0,
              "return_preprocessed_image": false,
              "lora_settings": null,
              "custom_settings": null
            },
            "output": null,
            "meta": {
              "created_at": "2025-06-11T20:33:14.358265863Z",
              "started_at": "0001-01-01T00:00:00Z",
              "ended_at": "0001-01-01T00:00:00Z",
              "usage": {
                "type": "llm",
                "frozen": 0,
                "consume": 150000
              },
              "is_using_private_pool": false
            },
            "detail": null,
            "logs": [],
            "error": {
              "code": 0,
              "raw_message": "",
              "message": "",
              "detail": null
            }
          },
          "message": "success"
        }
      }
    ]
  },
  "connections": {
    "Upload to Blotato": {
      "main": [
        [
          {
            "node": "[Instagram] Publish via Blotato",
            "type": "main",
            "index": 0
          },
          {
            "node": "[Facebook] Publish via Blotato",
            "type": "main",
            "index": 0
          },
          {
            "node": "[Linkedin] Publish via Blotato",
            "type": "main",
            "index": 0
          },
          {
            "node": "[Tiktok] Publish via Blotato",
            "type": "main",
            "index": 0
          },
          {
            "node": "[Youtube] Publish via Blotato",
            "type": "main",
            "index": 0
          },
          {
            "node": "[Threads] Publish via Blotato",
            "type": "main",
            "index": 0
          },
          {
            "node": "[Twitter] Publish via Blotato",
            "type": "main",
            "index": 0
          },
          {
            "node": "[Bluesky] Publish via Blotato",
            "type": "main",
            "index": 0
          },
          {
            "node": "Upload to Blotato - Image",
            "type": "main",
            "index": 0
          },
          {
            "node": "Status Done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to Blotato - Image": {
      "main": [
        [
          {
            "node": "[Pinterest] Publish via Blotato",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get all news",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Write Long Caption",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Script": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Setup Heygen": {
      "main": [
        [
          {
            "node": "Create Avatar Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Avatar Video": {
      "main": [
        [
          {
            "node": "Render Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare for Publish": {
      "main": [
        [
          {
            "node": "Upload to Blotato",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Long Caption": {
      "main": [
        [
          {
            "node": "Write Short Caption",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Short Caption": {
      "main": [
        [
          {
            "node": "Generate Image Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Avatar Video": {
      "main": [
        [
          {
            "node": "Wait 5 min",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Image Prompts",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Generate Image Prompts",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image Prompts": {
      "main": [
        [
          {
            "node": "Split Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Prompts": {
      "main": [
        [
          {
            "node": "Generate Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image": {
      "main": [
        [
          {
            "node": "Wait 90 sek",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 90 sek": {
      "main": [
        [
          {
            "node": "Get Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Images": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Save Prepared Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Prepared Data": {
      "main": [
        [
          {
            "node": "Setup Heygen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Render Video": {
      "main": [
        [
          {
            "node": "Wait 140 Seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 140 Seconds": {
      "main": [
        [
          {
            "node": "Save Final Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Final Video": {
      "main": [
        [
          {
            "node": "Prepare for Publish",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5 min": {
      "main": [
        [
          {
            "node": "Get Avatar Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch news": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Fetch article": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "write_table": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get all news": {
      "main": [
        [
          {
            "node": "Aggregate story_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate story_id": {
      "main": [
        [
          {
            "node": "Set to string",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set to string": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Los_Angeles",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "bpAG4MzmGehPEDDu"
  },
  "versionId": "34ed4146-930a-4d9f-9cc7-2e0b99b6f739",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "283e62a5552fbf2a1b889946175b1d21553f1f6e7adbd8e81e3be8969731db9b"
  },
  "id": "8Cd9ZTiMWSMcv8Rl",
  "tags": []
}