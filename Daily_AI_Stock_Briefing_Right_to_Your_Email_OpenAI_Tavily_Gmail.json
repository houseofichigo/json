{
  "id": "MPdLnvVyvH0V6l32",
  "meta": {
    "instanceId": "1c7b08fed4406d546caf4a44e8b942ca317e7e207bb9a5701955a1a6e1ce1843",
    "templateCredsSetupCompleted": true
  },
  "name": "Stock Market News",
  "tags": [],
  "nodes": [
    {
      "id": "d75e61cc-1661-4690-acbe-44b9b453f81d",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -60,
        0
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10
            }
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "819d9801-3ffb-47a5-9001-f2163b841e54",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        260,
        0
      ],
      "parameters": {
        "text": "=Today is {{ $json['Readable date'] }} Send me a summary of the stock market news today. Return the output in an easily readable email friendly format.",
        "options": {
          "systemMessage": "You are a market research assistant responsible for generating a concise yet insightful Daily Stock Market Intelligence Briefing. Your audience is an active investor with holdings in the S&P 500 index, Nvidia (NVDA), Google (GOOGL), Microsoft (MSFT), Amazon (AMZN), gold, Chinese Broad ETF and select U.S. banking stocks.\n\n#Tool\nUse Tavily as the web search tool for your research.\n\nEach day, your job is to:\n\nüì∞ 1. Curate Key Market Headlines (Concise Summary Format)\nInclude 5‚Äì7 top headlines affecting the U.S. stock market. These can include:\n\nMacroeconomic indicators (CPI, interest rates, job reports, Fed decisions)\n\nMajor geopolitical developments\n\nSignificant corporate earnings\n\nTech sector or AI innovation news (especially related to NVDA, GOOGL, MSFT, AMZN)\n\nGold price movement triggers\n\nFinancial sector news impacting banks (e.g., regulation, stress tests, default risks)\n\nüìà 2. Highlight Noteworthy Investing or Trading Opportunities\nIdentify any:\n\nUndervalued assets based on sentiment/news\n\nBreakouts or technical momentum setups\n\nNew AI or tech developments likely to benefit NVDA, MSFT, GOOGL\n\nBanking trends such as earnings strength, credit risk\n\nGold catalysts (inflation hedge, rate cuts, geopolitical risk)\n\nInclude:\n\nWhat the opportunity is\n\nWhy it matters (news or trend context)\n\nTime sensitivity (short-term/medium-term)\n\n‚ö†Ô∏è 3. Outline Key Risks or Headwinds\nInclude:\n\nMacro risks (e.g., rate hikes, inflationary concerns, China/US tensions)\n\nSector-specific concerns (e.g., chip supply for NVDA, ad spending for GOOGL/AMZN)\n\nBlack swan or tail risks (e.g., systemic banking risk, debt ceiling)\n\nüí° 4. Provide Actionable Trade Suggestions\nBased on the analysis above, suggest 1‚Äì3 potential trade actions, such as:\n\nBuy/sell/hold recommendations\n\nRebalancing ideas (e.g., shifting from tech to gold if macro risk rises)\n\nThematic ETF ideas (e.g., AI ETFs, inverse financials, S&P sector rotations)\n\nMention if the recommendation is tactical (short-term) or strategic (long-term)\n\nEach suggestion should include:\n\nThe reasoning (based on news/macro)\n\nSuggested time horizon\n\nRisk caveat or alternate view\n"
        },
        "promptType": "define"
      },
      "typeVersion": 2
    },
    {
      "id": "0a3ed626-6c8c-400d-b5de-6a57576a717b",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        200,
        200
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {},
      "typeVersion": 1.2
    },
    {
      "id": "d6aba54b-a170-4d44-819e-57818932813d",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        340,
        200
      ],
      "parameters": {
        "sessionKey": "={{ $workflow.id }}",
        "sessionIdType": "customKey"
      },
      "typeVersion": 1.3
    },
    {
      "id": "4261f9b3-e714-4152-a5fa-8cc7139f8aa5",
      "name": "Tavily",
      "type": "@tavily/n8n-nodes-tavily.tavilyTool",
      "position": [
        480,
        200
      ],
      "parameters": {
        "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query', ``, 'string') }}",
        "options": {}
      },
      "credentials": {},
      "typeVersion": 1
    },
    {
      "id": "4f3a563f-7032-4019-ab47-c44298fb4082",
      "name": "Gmail",
      "type": "n8n-nodes-base.gmail",
      "position": [
        640,
        0
      ],
      "webhookId": "REDACTED_WEBHOOK_ID",
      "parameters": {
        "sendTo": "your@email.com",
        "message": "={{ $json.output }}",
        "options": {},
        "subject": "Daily Stock Market Updates",
        "emailType": "text"
      },
      "credentials": {},
      "typeVersion": 2.1
    },
    {
      "id": "068a5cd5-55f2-4a3c-9c75-f6e7ae9eef70",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -140,
        -100
      ],
      "parameters": {
        "width": 260,
        "height": 520,
        "content": "Scheduled Daily Trigger"
      },
      "typeVersion": 1
    },
    {
      "id": "ed020827-e777-4ee2-8280-623beb40e914",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        140,
        -100
      ],
      "parameters": {
        "color": 3,
        "width": 460,
        "height": 520,
        "content": "AI Agent & Tavily Information Extractor"
      },
      "typeVersion": 1
    },
    {
      "id": "c97a9fa7-1bac-457f-bbc8-07db6f7b07fd",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        620,
        -100
      ],
      "parameters": {
        "color": 3,
        "height": 520,
        "content": "Send to Email"
      },
      "typeVersion": 1
    },
    {
      "id": "c0ef8936-88e3-45dd-819b-3940e91bc893",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -760,
        -100
      ],
      "parameters": {
        "color": 4,
        "width": 600,
        "height": 900,
        "content": "üì∞ Daily AI-Powered Stock Market Briefing via Email\nAutomate your market research with this intelligent workflow designed for busy investors and professionals.\n\nüîß What it does:\nEvery morning at 10 AM, this automation:\n\nTriggers a scheduled prompt to an AI Agent\n\nUses Tavily Web Search to pull the latest U.S. stock market headlines\n\nSummarizes insights based on a sample portfolio (S&P 500, NVDA, MSFT, GOOGL, AMZN, gold, and bank stocks)\n\nWatch Step-by-step Tutorial Video Guide here:\nhttps://www.youtube.com/@Automatewithmarc\n\nHighlights:\n\nüóûÔ∏è 5‚Äì7 key headlines\n\nüí° Investment opportunities\n\n‚ö†Ô∏è Market risks\n\nüìà Trade suggestions\n\nSends the summary directly to your email inbox via Gmail\n\nüß† Built with:\nüß† LangChain AI Agent (powered by GPT-4o)\n\nüîç Tavily Search Tool for real-time financial news\n\nüìß Gmail node for email delivery\n\n‚è∞ Daily trigger node for automation\n\n\nüíº Perfect for:\nIndividual investors & traders\n\nFinancial content creators\n\nPortfolio managers\n\nAnyone who wants actionable, AI-curated news without lifting a finger"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f489a874-59cb-486c-8804-cd4320333c55",
  "connections": {
    "Tavily": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  }
}