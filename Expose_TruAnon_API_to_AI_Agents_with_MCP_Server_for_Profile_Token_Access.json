{
  "id": "qrAUH1Mty13AjfAj",
  "meta": null,
  "name": "TruAnon Private API MCP Server",
  "tags": [],
  "nodes": [
    {
      "id": "1c218211-aae9-47af-a8b3-6a77bb2d5083",
      "name": "Setup Instructions",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1380,
        -240
      ],
      "parameters": {
        "color": 4,
        "height": 1060,
        "content": "### ‚öôÔ∏è Setup Instructions\n\n1. **Import Workflow**: \nLoad this workflow into your n8n instance\n\n2. **Authentication**: \nNo authentication required\n\n3. **Activate Workflow**:\nEnable the workflow to start the MCP server\n\n4. **Get MCP URL**: \nCopy the webhook URL from the MCP trigger\n\n5. **Connect AI Agent**:\nUse the MCP URL in your AI agent configuration\n\n\n### üí° Usage Notes\n‚Ä¢ Parameters are auto-populated by AI using $fromAI() expressions\n‚Ä¢ With 2 API endpoints available as tools\n‚Ä¢ Responses maintain original API structure\n\n\n### üõ†Ô∏è Customization\n‚Ä¢ Add data transformation nodes if needed\n‚Ä¢ Implement custom error handling\n‚Ä¢ Add logging or monitoring nodes\n\n‚Ä¢ Modify parameter defaults in any HTTP request node as needed\n\n### üí¨ Need Help?\nPing me on [discord](https://discord.me/cfomodz) for integration guidance and custom automations. Check the [n8n documentation](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolmcp/) for more information."
      },
      "typeVersion": 1
    },
    {
      "id": "2cffd818-8f0f-49de-94db-0ea9e267c4da",
      "name": "Workflow Overview",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        -240
      ],
      "parameters": {
        "width": 420,
        "height": 920,
        "content": "## üõ†Ô∏è TruAnon Private MCP Server ‚úÖ 2 operations\n\n### About\nThe TruAnon API requires two arguments for all endpoints: your TruAnon Service Identifier (typically your root domain) and a unique Member Name. No setup or dependencies are needed‚Äîjust include your Private Token in requests. Data is continuously updated, so caching responses is unnecessary.\n\n### üîß How it Works\n\nThis workflow converts the TruAnon Private API into an MCP-compatible interface for AI agents.\n\n‚Ä¢ **MCP Trigger**: Serves as your server endpoint for AI agent requests\n‚Ä¢ **HTTP Request Nodes**: Handle API calls to https://staging.truanon.com\n‚Ä¢ **AI Expressions**: Automatically populate parameters via `$fromAI()` placeholders\n‚Ä¢ **Native Integration**: Returns responses directly to the AI agent\n\n\n### üìã Available Operations (2 endpoints)\n\n**Get Profile (1 operations)**\nFetch User Profile\n\n**Request Token (1 operations)**\nGenerate Access Token\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "e51c9985-7962-4e54-a91c-05f6d99f6096",
      "name": "TruAnon Private MCP Server",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        -620,
        -240
      ],
      "webhookId": "fee5e60d-384a-42cc-92fe-01f51f442a9f",
      "parameters": {
        "path": "truanon-private-mcp"
      },
      "typeVersion": 1
    },
    {
      "id": "0c9fc78c-edf8-4d42-84ce-e9e51d78567a",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -660,
        -100
      ],
      "parameters": {
        "color": 2,
        "width": 300,
        "height": 200,
        "content": "## Get Profile"
      },
      "typeVersion": 1
    },
    {
      "id": "1460c168-145e-4ada-abb3-212dc58a305f",
      "name": "Fetch User Profile",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -520,
        -60
      ],
      "parameters": {
        "url": "=https://staging.truanon.com/api/get_profile",
        "options": {},
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "id",
              "value": "={{ $fromAI('id', 'This is your unique username or member ID', 'string') }}"
            },
            {
              "name": "service",
              "value": "={{ $fromAI('service', 'The service name given to you by TruAnon', 'string') }}"
            }
          ]
        },
        "toolDescription": "Get Profile\n\nParameters:\n- Query parameters:\n  ‚Ä¢ id (optional) - Is your unique username or member ID\n  ‚Ä¢ service (optional) - Service name given to you by TruAnon"
      },
      "typeVersion": 4.2
    },
    {
      "id": "f6d0ba70-a518-4cc7-a553-d3aa3b7647b8",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -660,
        140
      ],
      "parameters": {
        "color": 3,
        "width": 300,
        "height": 200,
        "content": "## Request Token"
      },
      "typeVersion": 1
    },
    {
      "id": "8f3bb225-4fc5-4a1b-8ddb-aaa081e5c2d1",
      "name": "Generate Access Token",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -520,
        180
      ],
      "parameters": {
        "url": "=https://staging.truanon.com/api/request_token",
        "options": {},
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "id",
              "value": "={{ $fromAI('id', 'This is your unique username or member ID', 'string') }}"
            },
            {
              "name": "service",
              "value": "={{ $fromAI('service', 'The service name given to you by TruAnon', 'string') }}"
            }
          ]
        },
        "toolDescription": "Get Token\n\nParameters:\n- Query parameters:\n  ‚Ä¢ id (optional) - Is your unique username or member ID\n  ‚Ä¢ service (optional) - Service name given to you by TruAnon"
      },
      "typeVersion": 4.2
    }
  ],
  "active": false,
  "shared": [
    {
      "role": "workflow:owner",
      "project": {
        "id": "G5fce9xGuBAsWBXe",
        "icon": null,
        "name": "David Ashby <david.ashby.lds@gmail.com>",
        "type": "personal",
        "createdAt": "2025-06-04T02:55:02.013Z",
        "updatedAt": "2025-06-04T02:56:01.361Z",
        "projectRelations": [
          {
            "role": "project:personalOwner",
            "user": {
              "id": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
              "role": "global:owner",
              "email": "david.ashby.lds@gmail.com",
              "disabled": false,
              "lastName": "Ashby",
              "settings": {
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749357655581
                },
                "userActivated": true,
                "userActivatedAt": 1749075994495,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "3N3vVikZb3MckFYm"
              },
              "createdAt": "2025-06-04T02:55:01.745Z",
              "firstName": "David",
              "isPending": false,
              "updatedAt": "2025-06-08T04:40:58.399Z",
              "mfaEnabled": false,
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_n8n_version": "1.95.3",
                "personalization_survey_submitted_at": "2025-06-04T02:56:07.075Z"
              }
            },
            "userId": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
            "createdAt": "2025-06-04T02:55:02.013Z",
            "projectId": "G5fce9xGuBAsWBXe",
            "updatedAt": "2025-06-04T02:55:02.013Z"
          }
        ]
      },
      "createdAt": "2025-07-03T05:48:39.141Z",
      "projectId": "G5fce9xGuBAsWBXe",
      "updatedAt": "2025-07-03T05:48:39.141Z",
      "workflowId": "qrAUH1Mty13AjfAj"
    }
  ],
  "pinData": {},
  "settings": {
    "timezone": "America/New_York"
  },
  "createdAt": "2025-07-03T05:48:39.135Z",
  "updatedAt": "2025-07-03T06:12:05.000Z",
  "versionId": "f5484480-614d-4c4c-9a65-4ca21c9b8228",
  "isArchived": false,
  "staticData": null,
  "connections": {
    "Fetch User Profile": {
      "ai_tool": [
        [
          {
            "node": "TruAnon Private MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Generate Access Token": {
      "ai_tool": [
        [
          {
            "node": "TruAnon Private MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "triggerCount": 0
}