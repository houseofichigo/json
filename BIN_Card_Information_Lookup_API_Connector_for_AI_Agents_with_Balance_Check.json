{
  "id": "92bdHzSdLed9qonz",
  "meta": null,
  "name": "BIN Lookup API MCP Server",
  "tags": [],
  "nodes": [
    {
      "id": "9a3f74d4-7008-4fb7-bcb2-1ec7b747b01c",
      "name": "Setup Instructions",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1380,
        -240
      ],
      "parameters": {
        "color": 4,
        "height": 1060,
        "content": "### ‚öôÔ∏è Setup Instructions\n\n1. **Import Workflow**: \nLoad this workflow into your n8n instance\n\n2. **Authentication**: \nNo authentication required\n\n3. **Activate Workflow**:\nEnable the workflow to start the MCP server\n\n4. **Get MCP URL**: \nCopy the webhook URL from the MCP trigger\n\n5. **Connect AI Agent**:\nUse the MCP URL in your AI agent configuration\n\n\n### üí° Usage Notes\n‚Ä¢ Parameters are auto-populated by AI using $fromAI() expressions\n‚Ä¢ With 2 API endpoints available as tools\n‚Ä¢ Responses maintain original API structure\n\n\n### üõ†Ô∏è Customization\n‚Ä¢ Add data transformation nodes if needed\n‚Ä¢ Implement custom error handling\n‚Ä¢ Add logging or monitoring nodes\n\n‚Ä¢ Modify parameter defaults in any HTTP request node as needed\n\n### üí¨ Need Help?\nPing me on [discord](https://discord.me/cfomodz) for integration guidance and custom automations. Check the [n8n documentation](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolmcp/) for more information."
      },
      "typeVersion": 1
    },
    {
      "id": "46d8ecad-0403-4111-b955-f98becf98511",
      "name": "Workflow Overview",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        -240
      ],
      "parameters": {
        "width": 420,
        "height": 920,
        "content": "## üõ†Ô∏è BIN Lookup MCP Server ‚úÖ 2 operations\n\n### About\nBIN lookup API, the free api service from bintable.com to lookup card information using it's BIN. the service maintains updated database based on the comunity and other third party services to make sure all BINs in the database are accurate and up to date.\n\n### üîß How it Works\n\nThis workflow converts the BIN Lookup API into an MCP-compatible interface for AI agents.\n\n‚Ä¢ **MCP Trigger**: Serves as your server endpoint for AI agent requests\n‚Ä¢ **HTTP Request Nodes**: Handle API calls to https://api.bintable.com/v1\n‚Ä¢ **AI Expressions**: Automatically populate parameters via `$fromAI()` placeholders\n‚Ä¢ **Native Integration**: Returns responses directly to the AI agent\n\n\n### üìã Available Operations (2 endpoints)\n\n**Balance (1 operations)**\ncheck\n\n**Lookup (1 operations)**\nlookup\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "54c9d6f8-e90a-4d73-b622-37295916037f",
      "name": "BIN Lookup MCP Server",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        -620,
        -240
      ],
      "webhookId": "976d6237-d0da-4326-adbb-7fb770ff2df6",
      "parameters": {
        "path": "bin-lookup-mcp"
      },
      "typeVersion": 1
    },
    {
      "id": "acaebad1-70e7-42cb-a999-d11243e32bd3",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -660,
        -100
      ],
      "parameters": {
        "color": 2,
        "width": 300,
        "height": 200,
        "content": "## Balance"
      },
      "typeVersion": 1
    },
    {
      "id": "c1830cb3-92e5-48bb-942b-4e790cc5066c",
      "name": "Check Balance",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -520,
        -60
      ],
      "parameters": {
        "url": "=https://api.bintable.com/v1/balance",
        "options": {},
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "={{ $fromAI('api_key', 'The API key, which you can get from bintable.com website.', 'string') }}"
            }
          ]
        },
        "toolDescription": "Check Balance\n\nParameters:\n- Query parameters:\n  ‚Ä¢ api_key (required) - The API key, which you can get from bintable.com website."
      },
      "typeVersion": 4.2
    },
    {
      "id": "657fa981-796d-4b1d-bb7f-7d6741f2bc73",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -660,
        140
      ],
      "parameters": {
        "color": 3,
        "width": 300,
        "height": 200,
        "content": "## Lookup"
      },
      "typeVersion": 1
    },
    {
      "id": "e208e27f-2c6a-4bec-9a38-5cfb31cebebb",
      "name": "Lookup for bin",
      "type": "n8n-nodes-base.httpRequestTool",
      "position": [
        -520,
        180
      ],
      "parameters": {
        "url": "=https://api.bintable.com/v1/{{ $fromAI('bin', 'pass the required BIN code', 'string') }}",
        "options": {},
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "={{ $fromAI('api_key', 'The API key, which you can get from bintable.com website.', 'string') }}"
            }
          ]
        },
        "toolDescription": "Lookup for bin\n\nParameters:\n- Path parameters:\n  ‚Ä¢ bin (required) - pass the required BIN code\n- Query parameters:\n  ‚Ä¢ api_key (required) - The API key, which you can get from bintable.com website."
      },
      "typeVersion": 4.2
    }
  ],
  "active": false,
  "shared": [
    {
      "role": "workflow:owner",
      "project": {
        "id": "G5fce9xGuBAsWBXe",
        "icon": null,
        "name": "David Ashby <david.ashby.lds@gmail.com>",
        "type": "personal",
        "createdAt": "2025-06-04T02:55:02.013Z",
        "updatedAt": "2025-06-04T02:56:01.361Z",
        "projectRelations": [
          {
            "role": "project:personalOwner",
            "user": {
              "id": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
              "role": "global:owner",
              "email": "david.ashby.lds@gmail.com",
              "disabled": false,
              "lastName": "Ashby",
              "settings": {
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749357655581
                },
                "userActivated": true,
                "userActivatedAt": 1749075994495,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "3N3vVikZb3MckFYm"
              },
              "createdAt": "2025-06-04T02:55:01.745Z",
              "firstName": "David",
              "isPending": false,
              "updatedAt": "2025-06-08T04:40:58.399Z",
              "mfaEnabled": false,
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_n8n_version": "1.95.3",
                "personalization_survey_submitted_at": "2025-06-04T02:56:07.075Z"
              }
            },
            "userId": "715c1c00-cb48-4712-9a32-f1f4b6db2b30",
            "createdAt": "2025-06-04T02:55:02.013Z",
            "projectId": "G5fce9xGuBAsWBXe",
            "updatedAt": "2025-06-04T02:55:02.013Z"
          }
        ]
      },
      "createdAt": "2025-07-01T21:38:13.231Z",
      "projectId": "G5fce9xGuBAsWBXe",
      "updatedAt": "2025-07-01T21:38:13.231Z",
      "workflowId": "92bdHzSdLed9qonz"
    }
  ],
  "pinData": {},
  "settings": {
    "timezone": "America/New_York"
  },
  "createdAt": "2025-07-01T21:38:13.229Z",
  "updatedAt": "2025-07-01T21:39:18.000Z",
  "versionId": "efe73539-46bf-4d4d-9861-8afdbfc2293e",
  "isArchived": false,
  "staticData": null,
  "connections": {
    "Check Balance": {
      "ai_tool": [
        [
          {
            "node": "BIN Lookup MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Lookup for bin": {
      "ai_tool": [
        [
          {
            "node": "BIN Lookup MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "triggerCount": 0
}