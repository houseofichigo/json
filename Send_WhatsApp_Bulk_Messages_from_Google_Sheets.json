{
  "id": "9KGiiRIN9IKHc7Ls",
  "meta": {
    "instanceId": "281fe883012e72eba57c771d5dbf7c3138ca3fe3633c5ba2adf6169821825dd4",
    "templateCredsSetupCompleted": true
  },
  "name": "WhatsApp Bulk Message Broadcast From Google Sheet",
  "tags": [],
  "nodes": [
    {
      "id": "e76ca205-6342-48e8-baf2-dd46c7cd8524",
      "name": "Fetch All Pending Queries for Messaging",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        128,
        32
      ],
      "parameters": {
        "options": {},
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status"
            }
          ]
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nI-AwIR3Y1FYzV0lwjr9iK6Ia4WuD5eRtgJH819rIIc/edit#gid=0",
          "cachedResultName": "message"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1nI-AwIR3Y1FYzV0lwjr9iK6Ia4WuD5eRtgJH819rIIc",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nI-AwIR3Y1FYzV0lwjr9iK6Ia4WuD5eRtgJH819rIIc/edit?usp=drivesdk",
          "cachedResultName": "WhatsApp Message Broadcast"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "hIOzlTOST3U7PqR8",
          "name": "Google Sheets account"
        }
      },
      "notesInFlow": false,
      "retryOnFail": false,
      "typeVersion": 4.6
    },
    {
      "id": "96e27292-9c80-4294-87da-7c16a3b1e5c2",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "position": [
        368,
        32
      ],
      "parameters": {
        "maxItems": 300
      },
      "typeVersion": 1
    },
    {
      "id": "e9246a66-68d4-4159-b231-b9032f104ddf",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        640,
        32
      ],
      "parameters": {
        "options": {}
      },
      "executeOnce": false,
      "typeVersion": 3
    },
    {
      "id": "f3ba4b18-d324-4548-80e5-469354af27a9",
      "name": "Change State of Rows in Sent1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1072,
        16
      ],
      "parameters": {
        "columns": {
          "value": {
            "Status": "Sent",
            "row_number": "={{ $('Limit').item.json.row_number }}"
          },
          "schema": [
            {
              "id": "SL",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "SL",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "WhatsApp No",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "WhatsApp No",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Name",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Name",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Message",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Message",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Image URL",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Image URL",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "type": "number",
              "display": true,
              "removed": false,
              "readOnly": true,
              "required": false,
              "displayName": "row_number",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "row_number"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "update",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nI-AwIR3Y1FYzV0lwjr9iK6Ia4WuD5eRtgJH819rIIc/edit#gid=0",
          "cachedResultName": "message"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1nI-AwIR3Y1FYzV0lwjr9iK6Ia4WuD5eRtgJH819rIIc",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nI-AwIR3Y1FYzV0lwjr9iK6Ia4WuD5eRtgJH819rIIc/edit?usp=drivesdk",
          "cachedResultName": "WhatsApp Message Broadcast"
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "hIOzlTOST3U7PqR8",
          "name": "Google Sheets account"
        }
      },
      "typeVersion": 4.6
    },
    {
      "id": "547f5f77-cf4a-4d50-897a-682b53389293",
      "name": "Send Message to 100 Phone No1",
      "type": "n8n-nodes-base.whatsApp",
      "position": [
        1072,
        208
      ],
      "webhookId": "0a1149cd-db71-46f9-b95f-0ef3ffdf6bf8",
      "parameters": {
        "template": "n8n_broadcast_message|en",
        "components": {
          "component": [
            {
              "type": "header",
              "headerParameters": {
                "parameter": [
                  {
                    "type": "image",
                    "imageLink": "={{ $json['Image URL'] }}"
                  }
                ]
              }
            },
            {
              "bodyParameters": {
                "parameter": [
                  {
                    "text": "={{ $json.Name }}"
                  },
                  {
                    "text": "={{ $json.Message }}"
                  }
                ]
              }
            }
          ]
        },
        "phoneNumberId": "106689602303326",
        "recipientPhoneNumber": "={{ String($json['WhatsApp No']) }}"
      },
      "credentials": {
        "whatsAppApi": {
          "id": "T2ie58mIhsaFCRN8",
          "name": "SpaGreen WA"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "d85bfed1-57d8-4889-834e-d0a3b0288cf1",
      "name": "Clean WhatsApp Number",
      "type": "n8n-nodes-base.code",
      "position": [
        848,
        208
      ],
      "parameters": {
        "jsCode": "const items = $input.all();\nconst updatedItems = items.map((item) => {\n  const waNo = item?.json[\"WhatsApp No\"];\n  const waNoStr = typeof waNo === 'string' ? waNo : (waNo !== undefined && waNo !== null ? String(waNo) : \"\");\n  const cleanedNumber = waNoStr.replace(/\\D/g, \"\");\n  item.json[\"WhatsApp No\"] = cleanedNumber;\n  return item;\n});\nreturn updatedItems;"
      },
      "typeVersion": 2
    },
    {
      "id": "daafd591-1d05-4469-a727-2985f56081db",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -864,
        -160
      ],
      "parameters": {
        "color": 4,
        "width": 704,
        "height": 2028,
        "content": "# 📘 n8n Workflow: WhatsApp Bulk Message Broadcast via Google Sheets\n\n## 📌 Overview\n\nThis **n8n automation workflow** enables you to send **bulk WhatsApp messages** directly from a **Google Sheet** using the **WhatsApp Business Cloud API**. It ensures efficient delivery and status tracking of each message, making it ideal for marketing, updates, or client communication.\n\n---\n\n## 🔍 Key Features\n\n- 📥 Fetches live rows from a connected Google Sheet  \n- 📤 Sends personalized WhatsApp messages to each number  \n- 📝 Updates the message delivery status back to the sheet  \n- 🕒 Supports batching and delays to comply with rate limits\n\n---\n\n## 🧰 Requirements\n\nBefore setting up the workflow, ensure you have:\n\n- ✅ Access to the **WhatsApp Business Cloud API** (via Meta Developer account)  \n- ✅ Google Sheets integration configured in n8n  \n- ✅ A properly formatted Google Sheet (see below)  \n\n📄 [Sample Google Sheet Template](https://docs.google.com/spreadsheets/d/1nI-AwIR3Y1FYzV0lwjr9iK6Ia4WuD5eRtgJH819rIIc/edit?usp=sharing)\n\n---\n\n## 📄 Google Sheet Structure\n\n| WhatsApp No  | Message                     | Status  |\n|--------------|-----------------------------|---------|\n| +8801XXXXXXX | Hello, this is a test msg.  | (empty) |\n\n> ℹ️ Keep the `Status` column blank for rows that need to be processed.\n\n---\n\n## ⚙️ Workflow Configuration Steps\n\n### 1. 🔗 Connect to Google Sheets\n\n- Add the **Google Sheets** node  \n- Authenticate with your Google account  \n- Select the appropriate spreadsheet and worksheet  \n- Apply a filter: `Status is empty`\n\n### 2. 🔁 Loop Through Data in Batches\n\n- Use **SplitInBatches** or a **Code** node to process a defined number of rows (e.g., 5 per batch)  \n- Include a **Wait** node to delay (e.g., 0.1–0.5 seconds) between each request to avoid hitting rate limits\n\n### 3. 🛠 Configure WhatsApp Business API\n\n- Add an **HTTP Request** node  \n- Authenticate using your Meta (Facebook) developer credentials  \n- Use a pre-approved **message template ID**  \n- Map Google Sheet columns to dynamic variables in the message payload\n\n### 4. 📋 Update Message Status\n\n- After successfully sending each message, use the **Google Sheets Update** node  \n- Update the `Status` column to `Sent` or `Failed` based on the API response\n\n---\n\n## 🎯 WhatsApp Template Requirements\n\nMake sure your template:\n\n- ✅ Is approved by Meta  \n- ✅ Uses variables (e.g., `{{1}}`, `{{2}}`) for dynamic values  \n- ✅ Matches the message content format being sent\n\n---\n\n"
      },
      "typeVersion": 1
    },
    {
      "id": "37d1728b-89fe-4bf8-9c5e-e42d3e4e51ae",
      "name": "Trigger Every 5 Minute",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -80,
        32
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "typeVersion": 1.2
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e5e04a32-bc80-4623-ac07-b00706d20adf",
  "connections": {
    "Limit": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Change State of Rows in Sent1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Clean WhatsApp Number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean WhatsApp Number": {
      "main": [
        [
          {
            "node": "Send Message to 300 Phone No",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger Every 5 Minute": {
      "main": [
        [
          {
            "node": "Fetch All Pending Queries for Messaging",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message to 100 Phone No1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch All Pending Queries for Messaging": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}