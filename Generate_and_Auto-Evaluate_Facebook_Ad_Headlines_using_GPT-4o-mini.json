{
  "meta": {
    "instanceId": "741fe657cb1cf25e93c97c159943779bc83f3af267584292298f2b35e660e8e8",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "id": "46a2c376-54c1-4c53-b757-87dcfe59eb3f",
      "name": "Send a message",
      "type": "n8n-nodes-base.gmail",
      "position": [
        2416,
        -240
      ],
      "webhookId": "1e4c49ff-4a3f-429b-9a93-781ab10f80f4",
      "parameters": {
        "message": "={{ $('Agent_HeadlineWriter').item.json.output }}",
        "options": {}
      },
      "credentials": {
        "gmailOAuth2": {
          "id": "nSkndCmTyBtH8K8D",
          "name": "Gmail account"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "a9f75e9b-3802-45b3-a142-98046cb263a5",
      "name": "FormTrigger_CopywritingBrief",
      "type": "n8n-nodes-base.formTrigger",
      "position": [
        -112,
        16
      ],
      "webhookId": "43eccd82-8552-4aab-8fa5-bdca37b2b512",
      "parameters": {
        "options": {},
        "formTitle": "Copywriting Agent",
        "formFields": {
          "values": [
            {
              "fieldLabel": "What is your product about?",
              "requiredField": true
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "ca9b8fc6-63ba-409e-9038-30c1d744738b",
      "name": "Set_PromptForHeadline",
      "type": "n8n-nodes-base.set",
      "position": [
        96,
        48
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "e1ad4483-fb6d-4a4a-8589-615fbe8530c9",
              "name": "Prompt For Agent",
              "type": "string",
              "value": "Write a facebook ad headline for this product:"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "28693439-cc56-4e1d-844e-2045336978e7",
      "name": "LLM_HeadlineWriterModel",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        416,
        224
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "qsnsBCnLGZhV5Geh",
          "name": "n8n free OpenAI API credits"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "c042dc35-18a7-4a74-babf-3565d464f259",
      "name": "Agent_HeadlineWriter",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        448,
        0
      ],
      "parameters": {
        "text": "={{ $json['Prompt For Agent'] }}:{{ $('FormTrigger_CopywritingBrief').item.json['What is your product about?'] }}\n\n",
        "options": {},
        "promptType": "define"
      },
      "typeVersion": 1.8
    },
    {
      "id": "f38e2143-4efe-4462-ba86-726e5236ea5e",
      "name": "LLM_EvalCriteriaModel",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        848,
        192
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "qsnsBCnLGZhV5Geh",
          "name": "n8n free OpenAI API credits"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "cf24aaad-b46d-4f9b-906f-94778c2df89a",
      "name": "LLM_HeadlineEvaluatorModel",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1248,
        208
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "qsnsBCnLGZhV5Geh",
          "name": "n8n free OpenAI API credits"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "c89277bc-31cb-42f6-95f4-2a2bdf6c81f6",
      "name": "LLM_BottomLineModel",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1760,
        240
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "qsnsBCnLGZhV5Geh",
          "name": "n8n free OpenAI API credits"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "3b55ff10-af4b-4cf2-abea-50c23ea705e5",
      "name": "Agent_IterationDecision",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1776,
        0
      ],
      "parameters": {
        "text": "=Based on the bottom line:{{ $json.output }}\n\n\nDecide if we need another iteration.\nReturn NO if we dont,\notherwise return YES and add your feedback.",
        "options": {},
        "promptType": "define"
      },
      "typeVersion": 1.8
    },
    {
      "id": "59e229e1-16f5-47bb-937b-d3ae6f7dbb13",
      "name": "If_NeedMoreIterations",
      "type": "n8n-nodes-base.if",
      "position": [
        2208,
        -160
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "7f7d7b1c-e8ae-4a87-a8fe-43e32f270b64",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.output }}",
              "rightValue": "NO"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "b90344b9-71a3-4104-bb94-07c982265f01",
      "name": "Agent_HeadlineEvaluator",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1344,
        0
      ],
      "parameters": {
        "text": "=Your goal is to asses the output of an AI agent.\nIt was supposed to:\n{{ $('Set_PromptForHeadline').item.json['Prompt For Agent'] }}\n\nThe answer it gave is:{{ $('Agent_HeadlineWriter').item.json.output }}\n\nProvide your response using these parameters:{{ $json.output }}. make sure you calculate your average and give a bottom line.",
        "options": {},
        "promptType": "define"
      },
      "typeVersion": 1.8
    },
    {
      "id": "9f155a08-0f1f-47f2-8b10-07a90dfabb6d",
      "name": "Agent_EvalCriteriaBuilder",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        896,
        0
      ],
      "parameters": {
        "text": "=Your goal is to define parametes for assesing the output of this prompt:\n{{ $('Set_PromptForHeadline').item.json['Prompt For Agent'] }}\n\nWhich parameters would you suggest? give me 5 parameters including the scale. All should be in scale of 1-10 (10 will be the most positive)",
        "options": {},
        "promptType": "define"
      },
      "typeVersion": 1.8
    },
    {
      "id": "2b447714-0276-4f34-82ce-5b50f7e750ae",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1024,
        -672
      ],
      "parameters": {
        "color": 4,
        "width": 1300,
        "height": 320,
        "content": "=======================================\n            WORKFLOW ASSISTANCE\n=======================================\nFor any questions or support, please contact:\n    Yaron@nofluff.online\n\nExplore more tips and tutorials here:\n   - YouTube: https://www.youtube.com/@YaronBeen/videos\n   - LinkedIn: https://www.linkedin.com/in/yaronbeen/\n=======================================\n"
      },
      "typeVersion": 1
    },
    {
      "id": "9387af72-afe9-4c71-9efe-9d8d4f0b8885",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1584,
        -272
      ],
      "parameters": {
        "color": 4,
        "width": 1289,
        "height": 1958,
        "content": "🧠 AUTOMATED FACEBOOK‑AD HEADLINE GENERATOR & QUALITY CHECK\nPowered by n8n + OpenAI\n\n🔹 SECTION 1: Capture the Brief & Build the Prompt\n📝 Form Trigger → 🛠️ Set Prompt\n\nNode\tName\tIcon\tPurpose\n📝\tFormTrigger_CopywritingBrief\t📝\tWeb‑form the marketer fills in with a single question: “What is your product about?”\n🛠️\tSet_PromptForHeadline\t⚙️\tPrepends the system command “Write a Facebook‑ad headline for this product:” and stores it as Prompt For Agent\n\n💡 Why it’s useful\nThe workflow starts only when someone submits a product description and guarantees that every downstream LLM sees the exact same, well‑formatted prompt.\n\n🔹 SECTION 2: Draft the Headline\n🤖 Headline LLM → ✍️ Headline Agent\n\nNode\tName\tIcon\tPurpose\n🤖\tLLM_HeadlineWriterModel\t💬\tGPT‑4o‑mini model credential; supplies horsepower to the agent.\n✍️\tAgent_HeadlineWriter\t✍️\tGenerates a first‑pass Facebook‑ad headline based on the prompt.\n\n💡 Why it’s useful\nInstantly produces a creative headline without human copywriting time.\n\n🔹 SECTION 3: Create Scoring Criteria\n🧮 Eval‑Criteria LLM → 📋 Criteria Agent\n\nNode\tName\tIcon\tPurpose\n🤖\tLLM_EvalCriteriaModel\t💬\tSame model, new call.\n📋\tAgent_EvalCriteriaBuilder\t📑\tInvents five 1‑to‑10 scoring parameters (e.g., Clarity, Relevance, Hook Strength, Brand Voice, Scroll‑Stoppage).\n\n💡 Why it’s useful\nYou get an objective, repeatable rubric instead of hand‑wavy “looks good / looks bad.”\n\n🔹 SECTION 4: Score the Headline\n🤖 Evaluator LLM → 🔍 Evaluator Agent\n\nNode\tName\tIcon\tPurpose\n🤖\tLLM_HeadlineEvaluatorModel\t💬\tModel that powers evaluation step.\n🔍\tAgent_HeadlineEvaluator\t🔍\tApplies the five criteria to the headline, returns JSON with scores + average and a plain‑language bottom‑line sentence.\n\n💡 Why it’s useful\nTurns subjective quality into hard numbers you can track over time.\n\n🔹 SECTION 5: Decide & (Optionally) Iterate\n🤖 Bottom‑Line LLM → 🟢/🔴 If Node\n\nNode\tName\tIcon\tPurpose\n🤖\tLLM_BottomLineModel\t💬\tReads the evaluator output.\n✅/🔄\tAgent_IterationDecision\t🤔\tReturns NO (accept) or YES + feedback (needs another draft).\n🔀\tIf_NeedMoreIterations\t🔀\tRoutes flow: NO → end; YES → loops headline back to Agent_HeadlineWriter for another try (loop wiring still TODO).\n\n💡 Why it’s useful\nEnsures only headlines that meet your quality bar move forward; poor ones auto‑iterate with AI feedback until they pass (or hit a loop limit you define).\n\n🎁 Benefits of This Workflow\n✅ One‑click form turns any product idea into a tested ad headline\n✅ Objective scoring rubric created on‑the‑fly — no need to pre‑author criteria\n✅ Automated re‑drafting saves copywriters’ time and creative energy\n✅ Fully modular: swap prompt wording, add storage/email nodes, or set a max‑loop limit in minutes\n✅ Runs entirely inside your n8n instance — no scraping, no external APIs beyond OpenAI credentials\n\nNeed to store approved headlines or send them to a teammate? Just append a Google Sheets or Email node after If_NeedMoreIterations → NO and you’re done."
      },
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "LLM_BottomLineModel": {
      "ai_languageModel": [
        [
          {
            "node": "Agent_IterationDecision",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agent_HeadlineWriter": {
      "main": [
        [
          {
            "node": "Agent_EvalCriteriaBuilder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If_NeedMoreIterations": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "LLM_EvalCriteriaModel": {
      "ai_languageModel": [
        [
          {
            "node": "Agent_EvalCriteriaBuilder",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Set_PromptForHeadline": {
      "main": [
        [
          {
            "node": "Agent_HeadlineWriter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent_HeadlineEvaluator": {
      "main": [
        [
          {
            "node": "Agent_IterationDecision",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent_IterationDecision": {
      "main": [
        [
          {
            "node": "If_NeedMoreIterations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM_HeadlineWriterModel": {
      "ai_languageModel": [
        [
          {
            "node": "Agent_HeadlineWriter",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agent_EvalCriteriaBuilder": {
      "main": [
        [
          {
            "node": "Agent_HeadlineEvaluator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM_HeadlineEvaluatorModel": {
      "ai_languageModel": [
        [
          {
            "node": "Agent_HeadlineEvaluator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "FormTrigger_CopywritingBrief": {
      "main": [
        [
          {
            "node": "Set_PromptForHeadline",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}