{
  "name": "get_ecom_product_details_from_airtable",
  "description": "Retrieve ecom product details from airtable",
  "color": "linear-gradient(rgb(69,255,169), rgb(187,6,181))",
  "iconSrc": "",
  "schema": "[]",
  "func": "const fetch = require('node-fetch');\n\n// Return already saved product detials, if exists\nconst savedPeroductDetails = $flow.state.product_info\nif(savedPeroductDetails?.length){\n  console.log(\"SAVED PRODUCT DETAILS RETURNED!!!!\")\n  return savedPeroductDetails\n}\n\n// Replace with your Airtable details\nconst baseId = 'appjvcjxVklJPf01y';\nconst tableName = 'tbl7QzV9OQKSrkx2y';\nconst recordId = $vars.ecom_product_id\nconst apiKey = $vars.airtable_api_key;\n\n// Construct the Airtable API URL for the individual record\nconst url = `https://api.airtable.com/v0/${baseId}/${encodeURIComponent(tableName)}/${recordId}`;\nconst options = {\n    method: 'GET',\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n    }\n};\n\nconsole.log(\"AIRTABLE URL :\", url)\n\ntry {\n    const response = await fetch(url, options);\n    const parsedResponse = await response.json();\n\n    if (!parsedResponse?.id) {\n        return \"Record not found. Please check the record ID or try again later.\";\n    }\n\n    const responseFields = parsedResponse?.fields\n    console.log(\"parsedResponse?.fields from airtable response : \", parsedResponse?.fields)\n    const finalResponse = {\n      \"product_name\": responseFields['name'],\n      \"product_description\": responseFields['description'],\n      \"product_properties\": responseFields['properties'],\n      \"product_customer_reviews\": responseFields['reviews']\n    }\n\n    return JSON.stringify(finalResponse); // Returning the individual record in JSON format\n} catch (error) {\n    console.error(\"Error fetching the record from Airtable:\", error);\n    return \"An error occurred while fetching the record from Airtable.\";\n}\n"
}